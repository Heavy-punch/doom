[{"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reportWebVitals.js":"1","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\App.js":"2","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\index.js":"3","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\header\\Header.js":"4","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\dropdown_menu\\MenuListComposition.jsx":"5","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\main\\Main.js":"6","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\footer\\Footer.js":"7","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\Content.js":"8","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\SideBar.js":"9","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ManagementScreen.js":"10","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ProductScreen.js":"11","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ProductAddScreen.js":"12","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\CategoryScreen.js":"13","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\CategoryAddScreen.js":"14","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ShelfScreen.js":"15","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ShelfAddScreen.js":"16","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\SupplierScreen.js":"17","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\SupplierAddScreen.js":"18","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\DiscountLabelScreen.js":"19","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\DiscountLabelAddScreen.js":"20","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\InvoiceScreen.js":"21","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\SignInScreen.js":"22","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\MessageBox.js":"23","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\SellingScreen.js":"24","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\Invoice.js":"25","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\userConstants.js":"26","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\PrivateRoute.js":"27","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\layouts\\PublicLayout.js":"28","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\PublicRoute.js":"29","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\store.js":"30","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\userReducers.js":"31","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\LoadingBox.js":"32","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\SearchProduct.js":"33","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\userActions.js":"34","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\layouts\\PrivateLayout.js":"35","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\productReducers.js":"36","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\productAction.js":"37","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\categoryReducers.js":"38","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\categoryConstants.js":"39","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\categoryActions.js":"40","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\shelfReducers.js":"41","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\shelfActions.js":"42","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\supplierReducers.js":"43","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\supplierActions.js":"44","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\discountLabelReducers.js":"45","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\discountLabelActions.js":"46","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\discountLabelConstants.js":"47","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\invoiceConstants.js":"48","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\invoiceActions.js":"49","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\shelfConstants.js":"50","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\invoiceReducers.js":"51","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ShelfEditScreen.js":"52","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\supplierConstants.js":"53","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\productConstants.js":"54","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\CategoryEditScreen.js":"55","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\SupplierEditScreen.js":"56","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\DiscountLabelEditScreen.js":"57","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\InvoiceEditScreen.js":"58","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ProductEditScreen.js":"59","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ProductDetailScreen.js":"60","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\Pagination.js":"61","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ProfileScreen.js":"62","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\UserScreen.js":"63","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\UserEditScreen.js":"64","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\UserAddScreen.js":"65","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ImportAddScreen.js":"66","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\exportReducers.js":"67","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ExportAddScreen.js":"68","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ImportScreen.js":"69","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\importActions.js":"70","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ExportScreen.js":"71","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ExportEditScreen.js":"72","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\exportActions.js":"73","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ImportEditScreen.js":"74","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\importReducers.js":"75","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\importConstants.js":"76","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\exportConstants.js":"77","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\InvoiceDetailScreen.js":"78","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\UserDetailScreen.js":"79","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\FormatCurrency.js":"80","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\BarChart.js":"81","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\StatisticScreen.js":"82"},{"size":362,"mtime":1606877802152,"results":"83","hashOfConfig":"84"},{"size":3790,"mtime":1608702978433,"results":"85","hashOfConfig":"84"},{"size":616,"mtime":1608650541546,"results":"86","hashOfConfig":"84"},{"size":481,"mtime":1608030400872,"results":"87","hashOfConfig":"84"},{"size":2687,"mtime":1608021641300,"results":"88","hashOfConfig":"84"},{"size":353,"mtime":1608031160068,"results":"89","hashOfConfig":"84"},{"size":359,"mtime":1608022080986,"results":"90","hashOfConfig":"84"},{"size":262,"mtime":1608030705454,"results":"91","hashOfConfig":"84"},{"size":347,"mtime":1608030668556,"results":"92","hashOfConfig":"84"},{"size":1379,"mtime":1610523035388,"results":"93","hashOfConfig":"84"},{"size":13826,"mtime":1610527040851,"results":"94","hashOfConfig":"84"},{"size":18095,"mtime":1610510666711,"results":"95","hashOfConfig":"84"},{"size":7821,"mtime":1610006634046,"results":"96","hashOfConfig":"84"},{"size":5686,"mtime":1609600922420,"results":"97","hashOfConfig":"84"},{"size":7674,"mtime":1610006634080,"results":"98","hashOfConfig":"84"},{"size":5452,"mtime":1610006634080,"results":"99","hashOfConfig":"84"},{"size":7891,"mtime":1609684028168,"results":"100","hashOfConfig":"84"},{"size":5302,"mtime":1609342995488,"results":"101","hashOfConfig":"84"},{"size":7989,"mtime":1610006634051,"results":"102","hashOfConfig":"84"},{"size":5436,"mtime":1609342995477,"results":"103","hashOfConfig":"84"},{"size":8252,"mtime":1610527242151,"results":"104","hashOfConfig":"84"},{"size":2283,"mtime":1610551268702,"results":"105","hashOfConfig":"84"},{"size":214,"mtime":1608603860060,"results":"106","hashOfConfig":"84"},{"size":21940,"mtime":1610526916239,"results":"107","hashOfConfig":"84"},{"size":2828,"mtime":1608635711435,"results":"108","hashOfConfig":"84"},{"size":2083,"mtime":1610006633997,"results":"109","hashOfConfig":"84"},{"size":694,"mtime":1609139024198,"results":"110","hashOfConfig":"84"},{"size":451,"mtime":1608825801410,"results":"111","hashOfConfig":"84"},{"size":613,"mtime":1608693060561,"results":"112","hashOfConfig":"84"},{"size":4016,"mtime":1609776159636,"results":"113","hashOfConfig":"84"},{"size":5060,"mtime":1610006634020,"results":"114","hashOfConfig":"84"},{"size":212,"mtime":1608603721264,"results":"115","hashOfConfig":"84"},{"size":1660,"mtime":1608635661067,"results":"116","hashOfConfig":"84"},{"size":7796,"mtime":1610006633969,"results":"117","hashOfConfig":"84"},{"size":11222,"mtime":1610007558809,"results":"118","hashOfConfig":"84"},{"size":2918,"mtime":1609815051563,"results":"119","hashOfConfig":"84"},{"size":4603,"mtime":1610006633960,"results":"120","hashOfConfig":"84"},{"size":2867,"mtime":1609342995457,"results":"121","hashOfConfig":"84"},{"size":1164,"mtime":1609056199463,"results":"122","hashOfConfig":"84"},{"size":4170,"mtime":1610854661354,"results":"123","hashOfConfig":"84"},{"size":2824,"mtime":1609142055022,"results":"124","hashOfConfig":"84"},{"size":4014,"mtime":1609088810352,"results":"125","hashOfConfig":"84"},{"size":2865,"mtime":1609342995472,"results":"126","hashOfConfig":"84"},{"size":4171,"mtime":1609342995438,"results":"127","hashOfConfig":"84"},{"size":2870,"mtime":1609342995460,"results":"128","hashOfConfig":"84"},{"size":4181,"mtime":1609342995433,"results":"129","hashOfConfig":"84"},{"size":1164,"mtime":1609342995444,"results":"130","hashOfConfig":"84"},{"size":1128,"mtime":1609342995445,"results":"131","hashOfConfig":"84"},{"size":4100,"mtime":1609815330211,"results":"132","hashOfConfig":"84"},{"size":1117,"mtime":1609140978777,"results":"133","hashOfConfig":"84"},{"size":2819,"mtime":1609342995468,"results":"134","hashOfConfig":"84"},{"size":7151,"mtime":1610006634080,"results":"135","hashOfConfig":"84"},{"size":1164,"mtime":1609342995448,"results":"136","hashOfConfig":"84"},{"size":1191,"mtime":1609815022923,"results":"137","hashOfConfig":"84"},{"size":6608,"mtime":1610006634027,"results":"138","hashOfConfig":"84"},{"size":7286,"mtime":1610006634090,"results":"139","hashOfConfig":"84"},{"size":7382,"mtime":1610006634051,"results":"140","hashOfConfig":"84"},{"size":5851,"mtime":1609396433231,"results":"141","hashOfConfig":"84"},{"size":21915,"mtime":1610006634073,"results":"142","hashOfConfig":"84"},{"size":9650,"mtime":1609767468431,"results":"143","hashOfConfig":"84"},{"size":678,"mtime":1609342995441,"results":"144","hashOfConfig":"84"},{"size":8459,"mtime":1610007503385,"results":"145","hashOfConfig":"84"},{"size":8671,"mtime":1610524943761,"results":"146","hashOfConfig":"84"},{"size":6743,"mtime":1610525391874,"results":"147","hashOfConfig":"84"},{"size":11414,"mtime":1610525472999,"results":"148","hashOfConfig":"84"},{"size":14885,"mtime":1610006634060,"results":"149","hashOfConfig":"84"},{"size":2847,"mtime":1610006634009,"results":"150","hashOfConfig":"84"},{"size":16956,"mtime":1610006634058,"results":"151","hashOfConfig":"84"},{"size":8300,"mtime":1610006634060,"results":"152","hashOfConfig":"84"},{"size":4126,"mtime":1610006633960,"results":"153","hashOfConfig":"84"},{"size":8199,"mtime":1610522031134,"results":"154","hashOfConfig":"84"},{"size":19216,"mtime":1610266541188,"results":"155","hashOfConfig":"84"},{"size":4073,"mtime":1610006633960,"results":"156","hashOfConfig":"84"},{"size":38970,"mtime":1611146331400,"results":"157","hashOfConfig":"84"},{"size":2871,"mtime":1609571800847,"results":"158","hashOfConfig":"84"},{"size":1155,"mtime":1610006633993,"results":"159","hashOfConfig":"84"},{"size":1155,"mtime":1610006633991,"results":"160","hashOfConfig":"84"},{"size":5475,"mtime":1610006634068,"results":"161","hashOfConfig":"84"},{"size":7100,"mtime":1610010122866,"results":"162","hashOfConfig":"84"},{"size":489,"mtime":1610294549146,"results":"163","hashOfConfig":"84"},{"size":1481,"mtime":1611146331393,"results":"164","hashOfConfig":"84"},{"size":904,"mtime":1611146331403,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"1x7e6vm",{"filePath":"169","messages":"170","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"168"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"168"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"241"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"251"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"251"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"168"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"172"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"299"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"172"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"168"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"172"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"172"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"172"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"172"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"172"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"172"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reportWebVitals.js",[],["356","357"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\App.js",["358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375"],"import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport PrivateLayout from './layouts/PrivateLayout';\nimport PublicLayout from './layouts/PublicLayout';\nimport CategoryAddScreen from \"./screens/CategoryAddScreen\";\nimport CategoryScreen from \"./screens/CategoryScreen\";\nimport DiscountLabelAddScreen from \"./screens/DiscountLabelAddScreen\";\nimport DiscountLabelScreen from \"./screens/DiscountLabelScreen\";\nimport InvoiceScreen from \"./screens/InvoiceScreen\";\nimport ManagementScreen from \"./screens/ManagementScreen\";\nimport ProductAddScreen from \"./screens/ProductAddScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport SellingScreen from \"./screens/SellingScreen\";\nimport ShelfAddScreen from \"./screens/ShelfAddScreen\";\nimport ShelfScreen from \"./screens/ShelfScreen\";\nimport SignInScreen from \"./screens/SignInScreen\";\nimport SupplierAddScreen from \"./screens/SupplierAddScreen\";\nimport SupplierScreen from \"./screens/SupplierScreen\";\n\n// function App() {\n//     return (\n//         <div>\n//             <ManagementScreen></ManagementScreen>\n//             <ProductScreen></ProductScreen>\n//             <ProductAddScreen></ProductAddScreen>\n//             <CategoryScreen></CategoryScreen>\n//             <CategoryAddScreen></CategoryAddScreen>\n//             <ShelfScreen></ShelfScreen>\n//             <ShelfAddScreen></ShelfAddScreen>\n//             <SupplierScreen></SupplierScreen>\n//             <SupplierAddScreen></SupplierAddScreen>\n//             <DiscountLabelScreen></DiscountLabelScreen>\n//             <DiscountLabelAddScreen></DiscountLabelAddScreen>\n//             <InvoiceScreen></InvoiceScreen>\n//             <SignInScreen></SignInScreen>\n//             <p>this is home page</p>\n//         </div>\n//     );\n// }\n\n// export default App;\n\n\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <PublicRoute path=\"/signin\" component={PublicLayout}>\n\n            </PublicRoute>\n            <PrivateRoute path=\"/\" component={PrivateLayout} >\n\n            </PrivateRoute>\n            {/* <div className=\"grid-container\">\n                <div className=\"header\">\n                    <div className=\"logo\">\n                        <Link to=\"/\">\n                            <img src=\"./images/logo.png\" alt=\"mng\" />\n                        </Link>\n                    </div>\n                    <div className=\"logout\">\n                        <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\n                    </div>\n                </div>\n                <div className=\"main\">\n                    <div className=\"sidebar\">\n                        <div className=\"user\">\n                            <img src=\"./images/user1.png\" alt=\"asfas\" />\n                        </div>\n                        <div className=\"menu\">\n                            <Link to=\"/\" className=\"active\">Trang Chủ</Link>\n                            <Link to=\"/statistic\">Thống Kê</Link>\n                            <Link to=\"/export\">Xuất Hàng</Link>\n                            <Link to=\"/import\">Nhập Hàng</Link>\n                            <Link to=\"/management\">Quản Lý</Link>\n                        </div>\n                    </div>\n                    <div className=\"content-wraper\">\n                        <Route path=\"/signin\" component={SignInScreen}></Route>\n                        <PrivateRoute path=\"/\" component={SellingScreen}></PrivateRoute>\n                    </div>\n                </div>\n                <div className=\"footer\">this is footer</div>\n            </div> */}\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n",["376","377"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\index.js",[],["378","379"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\header\\Header.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\dropdown_menu\\MenuListComposition.jsx",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\main\\Main.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\footer\\Footer.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\Content.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\SideBar.js",["380","381","382","383"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ManagementScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ProductScreen.js",["384","385","386","387","388","389","390","391","392","393"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ProductAddScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\CategoryScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\CategoryAddScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ShelfScreen.js",[],["394","395"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ShelfAddScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\SupplierScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\SupplierAddScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\DiscountLabelScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\DiscountLabelAddScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\InvoiceScreen.js",["396","397"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\SignInScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\MessageBox.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\SellingScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\Invoice.js",[],["398","399"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\userConstants.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\PrivateRoute.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\layouts\\PublicLayout.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\PublicRoute.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\store.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\userReducers.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\LoadingBox.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\SearchProduct.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\userActions.js",["400"],"import Axios from \"axios\";\r\nimport { USER_CHANGEPASSWORD_REQUEST, USER_CHANGEPASSWORD_SUCCESS, USER_CHANGEPASSWORD_FAIL, USER_CREATE_FAIL, USER_CREATE_REQUEST, USER_CREATE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_PROFILE_FAIL, USER_PROFILE_REQUEST, USER_PROFILE_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_ME_REQUEST, USER_UPDATE_ME_SUCCESS, USER_UPDATE_ME_FAIL } from \"../constants/userConstants\";\r\n\r\nexport const signin = (account, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { account, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/auth/login', { account, password });\r\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data.data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data.data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SIGNIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\nexport const changePassword = (passObj) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_CHANGEPASSWORD_REQUEST });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.put('/api/auth/changePassword', passObj,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    'x-access-token': `${userInfo.token}`\r\n                },\r\n            }\r\n        );\r\n        dispatch({ type: USER_CHANGEPASSWORD_SUCCESS, payload: data.data });\r\n        // localStorage.setItem('userInfo', JSON.stringify(data.data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_CHANGEPASSWORD_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const signout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_SIGNOUT });\r\n    document.location.href = '/signin';\r\n};\r\n\r\nexport const profileUser = () => async (dispatch, getState) => {\r\n    dispatch({ type: USER_PROFILE_REQUEST });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get('/api/managers/me',\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: USER_PROFILE_SUCCESS, payload: data.data });\r\n        // localStorage.setItem('userInfo', JSON.stringify(data.data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: USER_LIST_REQUEST,\r\n    });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(\r\n            `/api/managers`,\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: USER_LIST_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({ type: USER_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`/api/managers/${userId}`,\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createUser = (user) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_CREATE_REQUEST, payload: user });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.post(\r\n            '/api/managers',\r\n            user,\r\n            {\r\n\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    'x-access-token': `${userInfo.token}`\r\n                },\r\n            }\r\n        );\r\n        dispatch({\r\n            type: USER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: USER_CREATE_FAIL, payload: message });\r\n    }\r\n};\r\nexport const updateUser = (user, userId) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_UPDATE_REQUEST, payload: user });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/managers/${userId}`, user, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': `${userInfo.token}`\r\n            },\r\n        });\r\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: USER_UPDATE_FAIL, error: message });\r\n    }\r\n};\r\nexport const deleteUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_DELETE_REQUEST, payload: userId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = Axios.delete(`/api/managers`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': `${userInfo.token}`,\r\n            },\r\n            data: { 'arrayIds': userId }\r\n        });\r\n        dispatch({ type: USER_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: USER_DELETE_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const updateMe = (avatar) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_UPDATE_ME_REQUEST });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.put('/api/managers/me', avatar,\r\n            {\r\n                headers: {\r\n                    // \"Content-Type\": \"application/json\",\r\n                    'x-access-token': `${userInfo.token}`\r\n                },\r\n            }\r\n        );\r\n        dispatch({ type: USER_UPDATE_ME_SUCCESS, payload: data.data });\r\n        // localStorage.setItem('userInfo', JSON.stringify(data.data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_ME_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};",["401","402"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\layouts\\PrivateLayout.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\productReducers.js",[],["403","404"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\productAction.js",["405"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\categoryReducers.js",[],["406","407"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\categoryConstants.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\categoryActions.js",["408"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\shelfReducers.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\shelfActions.js",["409"],"import Axios from \"axios\";\r\nimport { SHELF_CREATE_FAIL, SHELF_CREATE_REQUEST, SHELF_CREATE_SUCCESS, SHELF_DELETE_FAIL, SHELF_DELETE_REQUEST, SHELF_DELETE_SUCCESS, SHELF_DETAILS_FAIL, SHELF_DETAILS_REQUEST, SHELF_DETAILS_SUCCESS, SHELF_LIST_FAIL, SHELF_LIST_REQUEST, SHELF_LIST_SUCCESS, SHELF_UPDATE_FAIL, SHELF_UPDATE_REQUEST, SHELF_UPDATE_SUCCESS } from \"../constants/shelfConstants\";\r\n\r\nexport const listShelves = () => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: SHELF_LIST_REQUEST,\r\n    });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(\r\n            `/api/shelves`,\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: SHELF_LIST_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({ type: SHELF_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const detailsShelf = (shelfId) => async (dispatch, getState) => {\r\n    dispatch({ type: SHELF_DETAILS_REQUEST, payload: shelfId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`/api/shelves/${shelfId}`,\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: SHELF_DETAILS_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SHELF_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createShelf = (shelf) => async (dispatch, getState) => {\r\n    dispatch({ type: SHELF_CREATE_REQUEST, payload: shelf });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.post(\r\n            '/api/shelves',\r\n            shelf,\r\n            {\r\n                headers: { 'x-access-token': `${userInfo.token}` },\r\n            }\r\n        );\r\n        dispatch({\r\n            type: SHELF_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: SHELF_CREATE_FAIL, payload: message });\r\n    }\r\n};\r\nexport const updateShelf = (shelf) => async (dispatch, getState) => {\r\n    dispatch({ type: SHELF_UPDATE_REQUEST, payload: shelf });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/shelves/${shelf.ShID}`, shelf, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': `${userInfo.token}`\r\n            },\r\n        });\r\n        dispatch({ type: SHELF_UPDATE_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: SHELF_UPDATE_FAIL, error: message });\r\n    }\r\n};\r\nexport const deleteShelf = (shelfId) => async (dispatch, getState) => {\r\n    dispatch({ type: SHELF_DELETE_REQUEST, payload: shelfId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = Axios.delete(`/api/shelves`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': `${userInfo.token}`,\r\n            },\r\n            data: { 'arrayIds': shelfId }\r\n        });\r\n        dispatch({ type: SHELF_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: SHELF_DELETE_FAIL, payload: message });\r\n    }\r\n};","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\supplierReducers.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\supplierActions.js",["410"],"import Axios from \"axios\";\r\nimport { SUPPLIER_CREATE_FAIL, SUPPLIER_CREATE_REQUEST, SUPPLIER_CREATE_SUCCESS, SUPPLIER_DELETE_FAIL, SUPPLIER_DELETE_REQUEST, SUPPLIER_DELETE_SUCCESS, SUPPLIER_DETAILS_FAIL, SUPPLIER_DETAILS_REQUEST, SUPPLIER_DETAILS_SUCCESS, SUPPLIER_LIST_FAIL, SUPPLIER_LIST_REQUEST, SUPPLIER_LIST_SUCCESS, SUPPLIER_UPDATE_FAIL, SUPPLIER_UPDATE_REQUEST, SUPPLIER_UPDATE_SUCCESS } from \"../constants/supplierConstants\";\r\n\r\nexport const listsuppliers = () => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: SUPPLIER_LIST_REQUEST,\r\n    });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(\r\n            `/api/suppliers`,\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: SUPPLIER_LIST_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({ type: SUPPLIER_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const detailsSupplier = (supplierId) => async (dispatch, getState) => {\r\n    dispatch({ type: SUPPLIER_DETAILS_REQUEST, payload: supplierId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`/api/suppliers/${supplierId}`,\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: SUPPLIER_DETAILS_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SUPPLIER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createSupplier = (supplier) => async (dispatch, getState) => {\r\n    dispatch({ type: SUPPLIER_CREATE_REQUEST, payload: supplier });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.post(\r\n            '/api/suppliers',\r\n            supplier,\r\n            {\r\n                headers: { 'x-access-token': `${userInfo.token}` },\r\n            }\r\n        );\r\n        dispatch({\r\n            type: SUPPLIER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: SUPPLIER_CREATE_FAIL, payload: message });\r\n    }\r\n};\r\nexport const updateSupplier = (supplier) => async (dispatch, getState) => {\r\n    dispatch({ type: SUPPLIER_UPDATE_REQUEST, payload: supplier });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/suppliers/${supplier.SupID}`, supplier, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': `${userInfo.token}`\r\n            },\r\n        });\r\n        dispatch({ type: SUPPLIER_UPDATE_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: SUPPLIER_UPDATE_FAIL, error: message });\r\n    }\r\n};\r\nexport const deleteSupplier = (supplierId) => async (dispatch, getState) => {\r\n    dispatch({ type: SUPPLIER_DELETE_REQUEST, payload: supplierId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = Axios.delete(`/api/suppliers`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': `${userInfo.token}`,\r\n            },\r\n            data: { 'arrayIds': supplierId }\r\n        });\r\n        dispatch({ type: SUPPLIER_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: SUPPLIER_DELETE_FAIL, payload: message });\r\n    }\r\n};","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\discountLabelReducers.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\discountLabelActions.js",["411"],"import Axios from \"axios\";\r\nimport { DISCOUNT_CREATE_FAIL, DISCOUNT_CREATE_REQUEST, DISCOUNT_CREATE_SUCCESS, DISCOUNT_DELETE_FAIL, DISCOUNT_DELETE_REQUEST, DISCOUNT_DELETE_SUCCESS, DISCOUNT_DETAILS_FAIL, DISCOUNT_DETAILS_REQUEST, DISCOUNT_DETAILS_SUCCESS, DISCOUNT_LIST_FAIL, DISCOUNT_LIST_REQUEST, DISCOUNT_LIST_SUCCESS, DISCOUNT_UPDATE_FAIL, DISCOUNT_UPDATE_REQUEST, DISCOUNT_UPDATE_SUCCESS } from \"../constants/discountLabelConstants\";\r\n\r\nexport const listDiscounts = () => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: DISCOUNT_LIST_REQUEST,\r\n    });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(\r\n            `/api/discounts`,\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: DISCOUNT_LIST_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({ type: DISCOUNT_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const detailsDiscount = (discountId) => async (dispatch, getState) => {\r\n    dispatch({ type: DISCOUNT_DETAILS_REQUEST, payload: discountId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`/api/discounts/${discountId}`,\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: DISCOUNT_DETAILS_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DISCOUNT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createDiscount = (discount) => async (dispatch, getState) => {\r\n    dispatch({ type: DISCOUNT_CREATE_REQUEST, payload: discount });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.post(\r\n            '/api/discounts',\r\n            discount,\r\n            {\r\n                headers: { 'x-access-token': `${userInfo.token}` },\r\n            }\r\n        );\r\n        dispatch({\r\n            type: DISCOUNT_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: DISCOUNT_CREATE_FAIL, payload: message });\r\n    }\r\n};\r\nexport const updateDiscount = (discount) => async (dispatch, getState) => {\r\n    dispatch({ type: DISCOUNT_UPDATE_REQUEST, payload: discount });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/discounts/${discount.discountId}`, discount, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': `${userInfo.token}`\r\n            },\r\n        });\r\n        dispatch({ type: DISCOUNT_UPDATE_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: DISCOUNT_UPDATE_FAIL, error: message });\r\n    }\r\n};\r\nexport const deleteDiscount = (discountId) => async (dispatch, getState) => {\r\n    dispatch({ type: DISCOUNT_DELETE_REQUEST, payload: discountId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = Axios.delete(`/api/discounts`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': `${userInfo.token}`,\r\n            },\r\n            data: { 'arrayIds': discountId }\r\n        });\r\n        dispatch({ type: DISCOUNT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: DISCOUNT_DELETE_FAIL, payload: message });\r\n    }\r\n};","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\discountLabelConstants.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\invoiceConstants.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\invoiceActions.js",["412"],"import Axios from \"axios\";\r\nimport { INVOICE_CREATE_FAIL, INVOICE_CREATE_REQUEST, INVOICE_CREATE_SUCCESS, INVOICE_DELETE_FAIL, INVOICE_DELETE_REQUEST, INVOICE_DELETE_SUCCESS, INVOICE_DETAILS_FAIL, INVOICE_DETAILS_REQUEST, INVOICE_DETAILS_SUCCESS, INVOICE_LIST_FAIL, INVOICE_LIST_REQUEST, INVOICE_LIST_SUCCESS, INVOICE_UPDATE_FAIL, INVOICE_UPDATE_REQUEST, INVOICE_UPDATE_SUCCESS } from \"../constants/invoiceConstants\";\r\n\r\nexport const listInvoices = () => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: INVOICE_LIST_REQUEST,\r\n    });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(\r\n            `/api/bills`,\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: INVOICE_LIST_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({ type: INVOICE_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const detailsInvoice = (invoiceId) => async (dispatch, getState) => {\r\n    dispatch({ type: INVOICE_DETAILS_REQUEST, payload: invoiceId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`/api/bills/${invoiceId}`,\r\n            { headers: { 'x-access-token': `${userInfo.token}` } }\r\n        );\r\n        dispatch({ type: INVOICE_DETAILS_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: INVOICE_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createInvoice = (invoice) => async (dispatch, getState) => {\r\n    dispatch({ type: INVOICE_CREATE_REQUEST, payload: invoice });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.post(\r\n            '/api/bills',\r\n            invoice,\r\n            {\r\n                headers: { 'x-access-token': `${userInfo.token}` },\r\n            }\r\n        );\r\n        dispatch({\r\n            type: INVOICE_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: INVOICE_CREATE_FAIL, payload: message });\r\n    }\r\n};\r\nexport const updateInvoice = (invoice) => async (dispatch, getState) => {\r\n    dispatch({ type: INVOICE_UPDATE_REQUEST, payload: invoice });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/bills/${invoice.BID}`, invoice, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': `${userInfo.token}`\r\n            },\r\n        });\r\n        dispatch({ type: INVOICE_UPDATE_SUCCESS, payload: data.data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: INVOICE_UPDATE_FAIL, error: message });\r\n    }\r\n};\r\nexport const deleteInvoice = (invoiceId) => async (dispatch, getState) => {\r\n    dispatch({ type: INVOICE_DELETE_REQUEST, payload: invoiceId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = Axios.delete(`/api/bills`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': `${userInfo.token}`,\r\n            },\r\n            data: { 'arrayIds': invoiceId }\r\n        });\r\n        dispatch({ type: INVOICE_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch({ type: INVOICE_DELETE_FAIL, payload: message });\r\n    }\r\n};","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\shelfConstants.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\invoiceReducers.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ShelfEditScreen.js",["413","414"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { detailsShelf, updateShelf } from '../actions/shelfActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { SHELF_UPDATE_RESET } from '../constants/shelfConstants';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction ShelfEditScreen(props) {\r\n    const history = useHistory();\r\n    const shelfId = props.match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [location, setLocation] = useState('');\r\n    const [status, setStatus] = useState('');\r\n\r\n    const shelfDetails = useSelector((state) => state.shelfDetails);\r\n    const { loading, error, shelf } = shelfDetails;\r\n\r\n    const shelfUpdate = useSelector((state) => state.shelfUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = shelfUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // console.log(shelf);\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: SHELF_UPDATE_RESET });\r\n            props.history.push('/shelves');\r\n        }\r\n        if (!shelf || shelf.ShID !== shelfId) {\r\n            dispatch({ type: SHELF_UPDATE_RESET });\r\n            dispatch(detailsShelf(shelfId));\r\n        }\r\n        dispatch({ type: SHELF_UPDATE_RESET });\r\n    }, [dispatch, successUpdate, props.history,]);\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setName(shelf.name);\r\n            setType(shelf.type);\r\n            setLocation(shelf.location);\r\n            setStatus(shelf.state);\r\n        }\r\n    }, [loading,]);\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateShelf({\r\n                ShID: shelfId,\r\n                name,\r\n                type,\r\n                location,\r\n                state: status,\r\n            })\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row center\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <h2>Sửa Kệ Hàng</h2>\r\n                </div>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                    {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                    {loading ? (\r\n                        <LoadingBox></LoadingBox>\r\n                    ) : error ? (\r\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                    ) : (\r\n                                <>\r\n                                    <form onSubmit={submitHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">tên kệ hàng:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"tên kệ hàng\"\r\n                                                name=\"name\"\r\n                                                value={name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\" >kiểu kệ hàng:</label>\r\n                                            <select\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"type\"\r\n                                                value={type}\r\n                                                onChange={(e) => setType(e.target.value)}\r\n                                            >\r\n                                                <option value=\"small\">nhỏ</option>\r\n                                                <option value=\"medium\">vừa</option>\r\n                                                <option value=\"large\">lớn</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\" >vị trí đặt:</label>\r\n                                            <select\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"location\"\r\n                                                value={location}\r\n                                                onChange={(e) => setLocation(e.target.value)}\r\n                                            >\r\n                                                <option value=\"warehouse\">kho</option>\r\n                                                <option value=\"store\">cửa hàng</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\" >trạng thái:</label>\r\n                                            <select\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name=\"status\"\r\n                                                value={status}\r\n                                                onChange={(e) => setStatus(e.target.value)}\r\n                                            >\r\n                                                <option value=\"available\">còn trống</option>\r\n                                                <option value=\"full\">đầy</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary fr\">Sửa kệ hàng</button>\r\n                                        <button type=\"reset\" className=\"btn btn-warning fr mr-3\" onClick={() => history.goBack()}>hủy bỏ</button>\r\n                                    </form>\r\n                                </>\r\n                            )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShelfEditScreen;","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\supplierConstants.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\productConstants.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\CategoryEditScreen.js",["415","416","417","418"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\SupplierEditScreen.js",["419","420","421","422"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { createSupplier, detailsSupplier, updateSupplier } from '../actions/supplierActions';\r\nimport { SUPPLIER_CREATE_RESET, SUPPLIER_UPDATE_RESET } from '../constants/supplierConstants';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction SupplierAddScreen(props) {\r\n    const history = useHistory();\r\n    const supplierId = props.match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [Email, setEmail] = useState('');\r\n    const [Address, setAddress] = useState('');\r\n    const [telephoneNumber, setTelephoneNumber] = useState('');\r\n    const [Tax_ID, setTax_ID] = useState('');\r\n\r\n    const supplierDetails = useSelector((state) => state.supplierDetails);\r\n    const { loading, error, supplier } = supplierDetails;\r\n\r\n    console.log(supplierId);\r\n\r\n    const supplierUpdate = useSelector((state) => state.supplierUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = supplierUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: SUPPLIER_UPDATE_RESET });\r\n            props.history.push('/suppliers');\r\n        }\r\n        if (!supplier || supplier.ShID !== supplierId) {\r\n            dispatch({ type: SUPPLIER_UPDATE_RESET });\r\n            dispatch(detailsSupplier(supplierId));\r\n        }\r\n        dispatch({ type: SUPPLIER_UPDATE_RESET });\r\n    }, [dispatch, successUpdate, props.history,]);\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setName(supplier.name);\r\n            setEmail(supplier.Email);\r\n            setAddress(supplier.Address);\r\n            setTelephoneNumber(supplier.telephoneNumber);\r\n            setTax_ID(supplier.Tax_ID);\r\n\r\n        }\r\n    }, [loading,]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateSupplier({\r\n                SupID: supplierId,\r\n                name,\r\n                Address,\r\n                Tax_ID,\r\n                Email,\r\n                telephoneNumber\r\n            })\r\n        );\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row center\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <h2>Sửa Nhà Cung Cấp</h2>\r\n                </div>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                    {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                    {loading ? (\r\n                        <LoadingBox></LoadingBox>\r\n                    ) : error ? (\r\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                    ) : (\r\n                                <>\r\n                                    <form onSubmit={submitHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">tên nhà cung cấp:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"tên nhà cung cấp\"\r\n                                                value={name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">địa chỉ:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"địa chỉ\"\r\n                                                value={Address}\r\n                                                onChange={(e) => setAddress(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">email:</label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"email\"\r\n                                                value={Email}\r\n                                                onChange={(e) => setEmail(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">mã số thuế:</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"MST\"\r\n                                                value={Tax_ID}\r\n                                                onChange={(e) => setTax_ID(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">số điện thoại:</label>\r\n                                            <input\r\n                                                type=\"tel\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"số điện thoại\"\r\n                                                value={telephoneNumber}\r\n                                                onChange={(e) => setTelephoneNumber(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary fr\">Sửa nhà cung cấp</button>\r\n                                        <button type=\"reset\" className=\"btn btn-warning fr mr-3\" onClick={() => history.goBack()}>hủy bỏ</button>\r\n                                    </form>\r\n                                </>\r\n                            )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SupplierAddScreen;","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\DiscountLabelEditScreen.js",["423","424"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\InvoiceEditScreen.js",["425","426"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { detailsInvoice, updateInvoice } from '../actions/invoiceActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { INVOICE_UPDATE_RESET } from '../constants/invoiceConstants';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction InvoiceEditScreen(props) {\r\n    const history = useHistory();\r\n    const invoiceId = props.match.params.id;\r\n\r\n    const [cusName, setCusName] = useState('');\r\n    const [total, setTotal] = useState('');\r\n    // const [mngID, setMngID] = useState('');\r\n\r\n    const invoiceDetails = useSelector((state) => state.invoiceDetails);\r\n    const { loading, error, invoice } = invoiceDetails;\r\n\r\n    const invoiceUpdate = useSelector((state) => state.invoiceUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = invoiceUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // console.log(invoice);\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: INVOICE_UPDATE_RESET });\r\n            props.history.push('/invoices');\r\n        }\r\n        if (!invoice || invoice.BID !== invoiceId) {\r\n            dispatch({ type: INVOICE_UPDATE_RESET });\r\n            dispatch(detailsInvoice(invoiceId));\r\n        }\r\n        dispatch({ type: INVOICE_UPDATE_RESET });\r\n    }, [dispatch, successUpdate, props.history,]);\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setCusName(invoice.cus_name);\r\n            setTotal(invoice.total);\r\n            // setMngID(invoice.MngID);\r\n        }\r\n    }, [loading,]);\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateInvoice({\r\n                BID: invoiceId,\r\n                cus_name: cusName,\r\n                total,\r\n                // M_ID: mngID,\r\n            })\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row center\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <h2>Sửa Đơn Hàng</h2>\r\n                </div>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                    {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                    {loading ? (\r\n                        <LoadingBox></LoadingBox>\r\n                    ) : error ? (\r\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                    ) : (\r\n                                <>\r\n                                    <form onSubmit={submitHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">tên khách hàng:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"tên khách hàng\"\r\n                                                name=\"cusName\"\r\n                                                value={cusName}\r\n                                                onChange={(e) => setCusName(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\" >tổng giá tiền:</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"tổng giá tiền\"\r\n                                                name=\"total\"\r\n                                                value={total}\r\n                                                onChange={(e) => setTotal(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        {/* <div className=\"form-group\">\r\n                                            <label className=\"form-label\" >ID nhân viên bán hàng:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"manager's ID\"\r\n                                                name=\"mngID\"\r\n                                                value={mngID}\r\n                                                onChange={(e) => setMngID(e.target.value)}\r\n                                            />\r\n                                        </div> */}\r\n                                        <button type=\"submit\" className=\"btn btn-primary fr\">Sửa đơn hàng</button>\r\n                                        <button type=\"reset\" className=\"btn btn-warning fr mr-3\" onClick={() => history.goBack()}>hủy bỏ</button>\r\n                                    </form>\r\n                                </>\r\n                            )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InvoiceEditScreen;",["427","428"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ProductEditScreen.js",["429","430","431","432","433","434","435","436","437"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { detailsProduct, updateProduct } from '../actions/productAction';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { PRODUCT_DETAILS_RESET, PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction ProductEditScreen(props) {\r\n    const history = useHistory();\r\n    const productId = props.match.params.id;\r\n\r\n    const [image, setImage] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [barcode, setBarcode] = useState('');\r\n    const [W_curr_qtt, setW_curr_qtt] = useState('');\r\n    const [W_min_qtt, setW_min_qtt] = useState('');\r\n    const [W_max_qtt, setW_max_qtt] = useState('');\r\n    const [S_curr_qtt, setS_curr_qtt] = useState('');\r\n    const [S_max_qtt, setS_max_qtt] = useState('');\r\n    const [S_min_qtt, setS_min_qtt] = useState('');\r\n    const [sell_price, setSell_price] = useState('');\r\n    const [import_price, setImport_price] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [catID, setCatID] = useState('');\r\n    const [qtt_per_unit, setqQtt_per_unit] = useState(1);\r\n    const [vat, setVat] = useState(0);\r\n    const [discountId, setDiscountId] = useState('');\r\n    const [description, setDescription] = useState('description');\r\n    const [otherDetail, setOtherDetail] = useState('otherDetail');\r\n    const [notice_days, setNotice_days] = useState('');\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = productUpdate;\r\n\r\n    // console.log(productCreate);\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET });\r\n            props.history.push('/products');\r\n        }\r\n        if (!product || product.ShID !== productId) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET });\r\n            dispatch(detailsProduct(productId));\r\n        }\r\n        dispatch({ type: PRODUCT_UPDATE_RESET });\r\n    }, [dispatch, successUpdate, props.history,]);\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setName(product.name);\r\n            product.barcode ? setBarcode(product.barcode) : setBarcode(barcode);\r\n            // product.W_curr_qtt ? setW_curr_qtt(product.W_curr_qtt) : setW_curr_qtt(W_curr_qtt);\r\n            setW_min_qtt(product.W_min_qtt);\r\n            setW_max_qtt(product.W_max_qtt);\r\n            // product.S_curr_qtt ? setS_curr_qtt(product.S_curr_qtt) : setS_curr_qtt(S_curr_qtt);\r\n            setS_max_qtt(product.S_min_qtt);\r\n            setS_min_qtt(product.S_max_qtt);\r\n            setBrand(product.brand);\r\n            setDescription(product.description);\r\n            setOtherDetail(product.otherDetail);\r\n            setCatID(product.categoryId);\r\n            product.discountId ? setDiscountId(product.discountId) : setDiscountId(discountId);\r\n            setSell_price(product.sell_price);\r\n            setVat(product.vat);\r\n            setNotice_days(product.notice_days);\r\n        }\r\n    }, [loading,]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        let formData = new FormData();\r\n        if (image.length > 0) {\r\n            formData.append('image', image[image.length - 1]);\r\n        }\r\n        formData.append('name', name);\r\n        formData.append('barcode', barcode);\r\n        // formData.append('W_curr_qtt', W_curr_qtt);\r\n        formData.append('W_min_qtt', W_min_qtt);\r\n        formData.append('W_max_qtt', W_max_qtt);\r\n        // formData.append('S_curr_qtt', S_curr_qtt);\r\n        formData.append('S_max_qtt', S_max_qtt);\r\n        formData.append('S_min_qtt', S_min_qtt);\r\n        formData.append('sell_price', sell_price);\r\n        formData.append('import_price', import_price);\r\n        formData.append('brand', brand);\r\n        formData.append('catID', catID);\r\n        formData.append('qtt_per_unit', qtt_per_unit);\r\n        formData.append('description', description);\r\n        formData.append('otherDetail', otherDetail);\r\n        // formData.append('discountId', discountId);\r\n        // formData.append('vat', vat);\r\n        formData.append('notice_days', notice_days);\r\n\r\n        dispatch(\r\n            updateProduct(\r\n                formData, productId\r\n            )\r\n        );\r\n        // for (var value of formData.values()) {\r\n        //     console.log(value);\r\n        // }\r\n    };\r\n\r\n    const onChangeImage = (e) => {\r\n        setImage([...image, e.target.files[0]]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row center\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <h2>Sửa Sản Phẩm</h2>\r\n                </div>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                    {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                    {loading ? (\r\n                        <LoadingBox></LoadingBox>\r\n                    ) : error ? (\r\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                    ) : (\r\n                                <>\r\n                                    <form onSubmit={submitHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">tên sản phẩm:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"tên sản phẩm\"\r\n                                                value={name}\r\n                                                onChange={(e) => setName(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">hình ảnh:</label>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                className=\"form-control-file border\"\r\n                                                name=\"image\"\r\n                                                onChange={onChangeImage}\r\n                                            />\r\n                                        </div>\r\n                                        {/* <div className=\"form-group\">\r\n                            <label className=\"form-label\">giá nhập SP:</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"giá nhập\"\r\n                                value={import_price}\r\n                                onChange={(e) => setImport_price(e.target.value)}\r\n                            />\r\n                        </div> */}\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">giá bán SP:</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"giá bán\"\r\n                                                value={sell_price}\r\n                                                onChange={(e) => setSell_price(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">thương hiệu:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"thuong hieu\"\r\n                                                value={brand}\r\n                                                onChange={(e) => setBrand(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">mã số ngành hàng:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"ID ngành hàng\"\r\n                                                value={catID}\r\n                                                onChange={(e) => setCatID(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">mô tả :</label>\r\n                                            <textarea\r\n                                                className=\"form-control\"\r\n                                                rows=\"5\"\r\n                                                value={description}\r\n                                                onChange={(e) => setDescription(e.target.value)}\r\n                                            >\r\n                                            </textarea>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">mô tả khác:</label>\r\n                                            <textarea\r\n                                                className=\"form-control\"\r\n                                                rows=\"3\"\r\n                                                value={otherDetail}\r\n                                                onChange={(e) => setOtherDetail(e.target.value)}\r\n                                            >\r\n                                            </textarea>\r\n                                        </div>\r\n                                        {/* <div className=\"form-group\">\r\n                                            <label className=\"form-label\">số lượng tồn kho hiện tại:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"sơ lượng tồn kho hiện tại\"\r\n                                                value={W_curr_qtt}\r\n                                                onChange={(e) => setW_curr_qtt(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">số lượng cửa hàng hiện tại:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"sơ lượng cửa hàng hiện tại\"\r\n                                                value={S_curr_qtt}\r\n                                                onChange={(e) => setS_curr_qtt(e.target.value)}\r\n                                            />\r\n                                        </div> */}\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">số lượng điều chỉnh:</label>\r\n                                            <div className=\"form-group row\">\r\n                                                <div className=\"col-xs-6\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <span className=\"input-group-addon\">tồn kho ít nhất</span>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            className=\"form-control\"\r\n                                                            value={W_min_qtt}\r\n                                                            onChange={(e) => setW_min_qtt(e.target.value)}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-xs-6\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <span className=\"input-group-addon\">tồn kho nhiều nhất</span>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            className=\"form-control\"\r\n                                                            value={W_max_qtt}\r\n                                                            onChange={(e) => setW_max_qtt(e.target.value)}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group row\">\r\n                                                <div className=\"col-xs-6\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <span className=\"input-group-addon\">cửa hàng ít nhất</span>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            className=\"form-control\"\r\n                                                            value={S_min_qtt}\r\n                                                            onChange={(e) => setS_min_qtt(e.target.value)}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-xs-6\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <span className=\"input-group-addon\">cửa hàng nhiều nhất</span>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            className=\"form-control\"\r\n                                                            value={S_max_qtt}\r\n                                                            onChange={(e) => setS_max_qtt(e.target.value)}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div className=\"form-group\">\r\n                            <label className=\"form-label\">mã số lô hàng:</label>\r\n                            <div className=\"input-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"mã số lô hàng\"\r\n                                    value={1}\r\n                                    onChange={(e) => setS_max_qtt(e.target.value)}\r\n                                />\r\n                                <div className=\"input-group-btn\">\r\n                                    <button className=\"btn btn-default\" type=\"button\">\r\n                                        <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i><span className=\"ml-3\">tạo mới</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div> */}\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">mã vạch:</label>\r\n                                            <div className=\"input-group\">\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    className=\"form-control\"\r\n                                                    placeholder=\"mã vạch\"\r\n                                                    value={barcode}\r\n                                                    onChange={(e) => setBarcode(e.target.value)}\r\n                                                />\r\n                                                <div className=\"input-group-btn\">\r\n                                                    <button\r\n                                                        className=\"btn btn-default\"\r\n                                                        type=\"button\"\r\n                                                        onClick={() => setBarcode(Math.floor(Math.random() * (10 ** 13)))}\r\n                                                    >\r\n                                                        <i className=\"fa fa-barcode\" aria-hidden=\"true\"></i><span className=\"ml-3\">quét</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">mã giảm giá:</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"mã giảm giá\"\r\n                                                value={discountId}\r\n                                                onChange={(e) => setDiscountId(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">thuế giá trị gia tăng:</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"thuế giá trị gia tăng\"\r\n                                                value={vat}\r\n                                                onChange={(e) => setVat(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">thời hạn thông báo thanh lý:</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"nhập số ngày kích hoạt\"\r\n                                                value={notice_days}\r\n                                                onChange={(e) => setNotice_days(e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-primary fr\">sửa sản phẩm</button>\r\n                                        <button type=\"submit\" className=\"btn btn-warning fr mr-3\" onClick={() => history.goBack()}>hủy bỏ</button>\r\n                                        {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                                    </form>\r\n                                </>\r\n                            )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductEditScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ProductDetailScreen.js",["438","439"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\Pagination.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\UserScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\UserEditScreen.js",["440","441"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { detailsUser, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction UserEditScreen(props) {\r\n    const history = useHistory();\r\n    const userId = props.match.params.id;\r\n\r\n    const [avatar, setavatar] = useState([]);\r\n    const [gender, setGender] = useState('');\r\n    const [is_active, setIs_active] = useState('');\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    console.log(is_active);\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = userUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            props.history.push('/users');\r\n        }\r\n        if (!user || user.ShID !== userId) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            dispatch(detailsUser(userId));\r\n        }\r\n        dispatch({ type: USER_UPDATE_RESET });\r\n    }, [dispatch, successUpdate, props.history,]);\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setGender(user.gender);\r\n            setIs_active(user.is_active);\r\n        }\r\n    }, [loading,]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let formData = new FormData();\r\n        if (avatar.length > 0) {\r\n            formData.append('avatar', avatar[avatar.length - 1]);\r\n        }\r\n        formData.append('gender', gender);\r\n        formData.append('is_active', is_active ? 1 : 0);\r\n        dispatch(\r\n            updateUser(\r\n                formData,\r\n                userId,\r\n            )\r\n        );\r\n\r\n    };\r\n    const onChangeImage = (e) => {\r\n        setavatar([...avatar, e.target.files[0]]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row center\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <h2>Sửa Thông Tin Người Dùng</h2>\r\n                </div>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                    {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                    {loading ? (\r\n                        <LoadingBox></LoadingBox>\r\n                    ) : error ? (\r\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                    ) : (\r\n                                <>\r\n                                    <form onSubmit={submitHandler}>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\" >hình ảnh:</label>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                className=\"form-control-file border\"\r\n                                                name=\"image\"\r\n                                                onChange={onChangeImage}\r\n                                            // onChange={(e) => setImage(e.target.files[0])}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"form-label\">giới tính:</label>\r\n                                            <div className=\"radio\">\r\n                                                <label>\r\n                                                    <input type=\"radio\" name=\"gender\" value=\"male\" onChange={(e) => setGender(e.target.value)} checked={gender === \"male\"} />\r\n                                                    nam\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className=\"radio\">\r\n                                                <label>\r\n                                                    <input type=\"radio\" name=\"gender\" value=\"female\" onChange={(e) => setGender(e.target.value)} checked={gender === \"female\"} />\r\n                                                    nữ\r\n                                                </label>\r\n                                            </div>\r\n                                            <div className=\"radio\">\r\n                                                <label>\r\n                                                    <input type=\"radio\" name=\"gender\" value=\"other\" onChange={(e) => setGender(e.target.value)} checked={gender === \"other\"} />\r\n                                                    khác\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group chkb\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                name=\"is_active\"\r\n                                                value={is_active}\r\n                                                checked={is_active}\r\n                                                onChange={(e) => setIs_active(e.target.checked)}\r\n                                            />\r\n                                            <label htmlFor=\"is_active\" className=\"form-label\">kích hoạt</label>\r\n                                        </div>\r\n\r\n                                        <button type=\"submit\" className=\"btn btn-primary fr\">sửa thông tin người dùng</button>\r\n                                        <button type=\"reset\" className=\"btn btn-warning fr mr-3\" onClick={() => history.goBack()}>hủy bỏ</button>\r\n                                    </form>\r\n                                </>\r\n                            )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserEditScreen;","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\UserAddScreen.js",["442"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { createSupplier, createUser } from '../actions/userActions';\r\nimport { USER_CREATE_RESET } from '../constants/userConstants';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction UserAddScreen(props) {\r\n    const history = useHistory();\r\n    const [FName, setFName] = useState('');\r\n    const [LName, setLName] = useState('');\r\n    const [accountName, setAccountName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [telephoneNumber, setTelephoneNumber] = useState('');\r\n    const [Address, setAddress] = useState('');\r\n    const [BDay, setBDay] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [salary, setSalary] = useState('');\r\n    const [date_start_working, setDate_start_working] = useState('');\r\n    const [managerType, setManagerType] = useState('normal');\r\n    const [email, setEmail] = useState('');\r\n    const [is_active, setIs_active] = useState('');\r\n\r\n    console.log(is_active);\r\n\r\n    const dispatch = useDispatch();\r\n    const userCreate = useSelector((state) => state.userCreate);\r\n    const {\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n    } = userCreate;\r\n\r\n    useEffect(() => {\r\n        if (successCreate) {\r\n            dispatch({ type: USER_CREATE_RESET });\r\n            props.history.push('/users');\r\n        }\r\n        dispatch({ type: USER_CREATE_RESET });\r\n    }, [successCreate, dispatch, props.history]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            createUser({\r\n                FName,\r\n                LName,\r\n                accountName,\r\n                password,\r\n                telephoneNumber,\r\n                Address,\r\n                BDay,\r\n                gender,\r\n                salary,\r\n                date_start_working,\r\n                managerType,\r\n                email,\r\n                is_active: is_active ? 1 : 0\r\n            })\r\n        );\r\n\r\n    };\r\n    // const onChangeImage = (e) => {\r\n    //     // console.log('image: ', image);\r\n    //     setImage([...image, e.target.files[0]]);\r\n    //     // setImage(e.target.files[0]);\r\n    //     // console.log('image: ', image);\r\n    //     // console.log(image);\r\n    // };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row center\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <h2>Thêm Người Dùng</h2>\r\n                </div>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                    {loadingCreate && <LoadingBox></LoadingBox>}\r\n                    {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Họ:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"họ\"\r\n                                value={LName}\r\n                                onChange={(e) => setLName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">tên đệm & tên:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"tên đệm & tên\"\r\n                                value={FName}\r\n                                onChange={(e) => setFName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Tên tài khoản:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"tên tài khoản\"\r\n                                value={accountName}\r\n                                onChange={(e) => setAccountName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Password:</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">số điện thoại:</label>\r\n                            <input\r\n                                type=\"tel\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"số điện thoại\"\r\n                                value={telephoneNumber}\r\n                                onChange={(e) => setTelephoneNumber(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\" >Email:</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">địa chỉ:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"địa chỉ\"\r\n                                value={Address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\" >ngày sinh:</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                                value={BDay}\r\n                                onChange={(e) => setBDay(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">giới tính:</label>\r\n                            <div className=\"radio\">\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"gender\" value=\"male\" onChange={(e) => setGender(e.target.value)} checked={gender === \"male\"} />\r\n                                    nam\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"radio\">\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"gender\" value=\"female\" onChange={(e) => setGender(e.target.value)} checked={gender === \"female\"} />\r\n                                    nữ\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"radio\">\r\n                                <label>\r\n                                    <input type=\"radio\" name=\"gender\" value=\"other\" onChange={(e) => setGender(e.target.value)} checked={gender === \"other\"} />\r\n                                    khác\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Lương:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"lương\"\r\n                                value={salary}\r\n                                onChange={(e) => setSalary(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Ngày bắt đầu làm việc:</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                                value={date_start_working}\r\n                                onChange={(e) => setDate_start_working(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\" >loại người dùng:</label>\r\n                            <select\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"managertype\"\r\n                                value={managerType}\r\n                                onChange={(e) => setManagerType(e.target.value)}\r\n                            >\r\n                                <option value=\"prime\">nâng cao</option>\r\n                                <option value=\"normal\">bình thường</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group chkb\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                name=\"is_active\"\r\n                                value={is_active}\r\n                                onChange={(e) => setIs_active(e.target.checked)}\r\n                            />\r\n                            <label htmlFor=\"is_active\" className=\"form-label\">kích hoạt</label>\r\n                        </div>\r\n\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary fr\">thêm người dùng</button>\r\n                        <button type=\"reset\" className=\"btn btn-warning fr mr-3\" onClick={() => history.goBack()}>hủy bỏ</button>\r\n                        {loadingCreate && <LoadingBox></LoadingBox>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserAddScreen;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ImportAddScreen.js",["443","444","445"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { createImport } from '../actions/importActions';\r\nimport { listProducts } from '../actions/productAction';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Pagination from '../components/Pagination';\r\n\r\nimport { IMPORT_CREATE_RESET } from '../constants/importConstants';\r\nimport { PRODUCT_LIST_REQUEST } from '../constants/productConstants';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction ImportAddScreen(props) {\r\n    const history = useHistory();\r\n    const [keyword, setKeyword] = useState('');\r\n    const [cart, setCart] = useState([]);\r\n    const [urgent_level, setUrgent_level] = useState('normal');\r\n    const [bonus, setBonus] = useState('');\r\n\r\n    const getCurrentDate = () => { let date = new Date(); return date };\r\n\r\n\r\n    // console.log(type);\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const { loading, error, products } = productList;\r\n\r\n    const importCreate = useSelector((state) => state.importCreate);\r\n    const {\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n    } = importCreate;\r\n\r\n    // console.log(importCreate);\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts({ is_less_than_Wmin: true }));\r\n        // dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (successCreate) {\r\n            dispatch({ type: IMPORT_CREATE_RESET });\r\n            props.history.push('/imports');\r\n        }\r\n        dispatch({ type: IMPORT_CREATE_RESET });\r\n    }, [successCreate, dispatch, props.history]);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [productsPerPage] = useState(5);\r\n\r\n    const indexOfLastProduct = currentPage * productsPerPage;\r\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n    const currentProducts = products !== undefined ? products.slice(indexOfFirstProduct, indexOfLastProduct) : [];\r\n\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    const onSearchHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(listProducts({ name_keyword: keyword }));\r\n        setKeyword('');\r\n        // setName(null);\r\n    };\r\n\r\n    const addToCart = (product, quantity) => {\r\n        var index = findProductInCart([...cart], product);\r\n        if (index === -1) {\r\n            console.log(\"can't find\");\r\n            let newArr = [...cart];\r\n            newArr.push({ product, qty: quantity });\r\n            setCart(newArr);\r\n        }\r\n        else {\r\n            console.log(\"finded\");\r\n            let newArr = [...cart];\r\n            newArr[index].qty = newArr[index].qty >= newArr[index].product.W_max_qtt - newArr[index].product.warehouse_curr_qtt ? newArr[index].qty : newArr[index].qty + quantity;\r\n            setCart(newArr);\r\n        }\r\n    };\r\n\r\n    const findProductInCart = (fcart, fproduct) => {\r\n        var index = -1;\r\n        if (fcart.length > 0) {\r\n            for (let i = 0; i < fcart.length; i++) {\r\n                if (fcart[i].product.PID === fproduct.PID) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        console.log(\"delete\");\r\n        let newArr = [...cart];\r\n        newArr.splice(index, 1);\r\n        setCart(newArr);\r\n        // console.log(newArr);\r\n    };\r\n\r\n    const onChangeQty = (event, index) => {\r\n        console.log(\"change qty\");\r\n        let newArr = [...cart];\r\n        // newArr[index].qty = parseInt(event.target.value, 10);\r\n        newArr[index].qty = event.target.value < 1 ? 1 : event.target.value > newArr[index].product.W_max_qtt - newArr[index].product.warehouse_curr_qtt ? newArr[index].product.W_max_qtt - newArr[index].product.warehouse_curr_qtt : parseInt(event.target.value, 10);\r\n        setCart(newArr);\r\n    };\r\n\r\n    const subQty = (index) => {\r\n        console.log(\"sub 1 qty\");\r\n        let newArr = [...cart];\r\n        newArr[index].qty -= 1;\r\n        setCart(newArr);\r\n    };\r\n\r\n    const addQty = (index) => {\r\n        console.log(\"add 1 qty\");\r\n        let newArr = [...cart];\r\n        newArr[index].qty += 1;\r\n        setCart(newArr);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let importProducts = [];\r\n        cart.forEach(item => importProducts.push({ productId: item.product.PID, request_total_unit: item.qty }));\r\n        dispatch(\r\n            createImport({\r\n                urgent_level,\r\n                bonus,\r\n                importProducts,\r\n            })\r\n        );\r\n    };\r\n\r\n    // console.log(cart);\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row center\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <h2>Thêm Đơn Nhập Hàng</h2>\r\n                </div>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-5 col-lg-5\">\r\n                    <form onSubmit={onSearchHandler}>\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                name=\"search-bar\"\r\n                                value={keyword}\r\n                                onChange={(e) => setKeyword(e.target.value)}\r\n                            />\r\n                            <span className=\"input-group-btn\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    <i className=\"fa fa-search mr-3\" aria-hidden=\"true\"></i>\r\n                                tìm kiếm\r\n                            </button>\r\n                            </span>\r\n                        </div>\r\n                    </form>\r\n                    {loading ? (\r\n                        <LoadingBox></LoadingBox>\r\n                    ) : error ? (\r\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                    ) : (\r\n                                <>\r\n                                    {products.length === 0 && <MessageBox>No product Found</MessageBox>}\r\n                                    <table className=\"table table-bordered table-hover mt15\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"col-xs-1 col-md-1\">id</th>\r\n                                                <th className=\"col-xs-2 col-md-2\">ảnh</th>\r\n                                                <th className=\"col-xs-4 col-md-4\">tên</th>\r\n                                                <th className=\"col-xs-3 col-md-3\">tồn kho</th>\r\n                                                <th className=\"col-xs-2 col-md-2\">thêm</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {currentProducts.map((product, index) => (\r\n                                                <tr key={product.PID}>\r\n                                                    <td>{product.PID}</td>\r\n                                                    <td><img src={product.img_url} alt={product.name} className=\"product-img\"></img></td>\r\n                                                    <td>{product.name}</td>\r\n                                                    <td>{product.warehouse_curr_qtt}</td>\r\n                                                    <td>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"btn btn-primary\"\r\n                                                            disabled={product.warehouse_curr_qtt >= product.W_max_qtt}\r\n                                                            onClick={() => addToCart(product, 1)}\r\n                                                        >\r\n                                                            <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    {products.length > productsPerPage ? <Pagination itemsPerPage={productsPerPage} totalItems={products.length} paginate={paginate}></Pagination> : <br></br>}\r\n                                </>\r\n                            )}\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                    {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\" >độ ưu tiên:</label>\r\n                            <select\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"status\"\r\n                                value={urgent_level}\r\n                                onChange={(e) => setUrgent_level(e.target.value)}\r\n                            >\r\n                                <option value=\"normal\">bình thường</option>\r\n                                <option value=\"prior\">ưu tiên</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">ghi chú:</label>\r\n                            <textarea\r\n                                className=\"form-control\"\r\n                                rows=\"3\"\r\n                                placeholder=\"ghi chú\"\r\n                                value={bonus}\r\n                                onChange={(e) => setBonus(e.target.value)}\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n\r\n                        <table className=\"table table-hover mt15\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"col-md-1\">stt</th>\r\n                                    <th className=\"col-md-2\">tên sp</th>\r\n                                    <th className=\"col-md-2\">số lượng</th>\r\n                                    {/* <th className=\"col-md-2\">đơn giá</th>\r\n                                    <th className=\"col-md-2\">giảm giá</th>\r\n                                    <th className=\"col-md-2\">thành tiền</th> */}\r\n                                    <th className=\"col-md-1\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {cart.map((cartItem, index) => (\r\n                                    <tr key={cartItem.product.PID}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{cartItem.product.name}</td>\r\n                                        <td>\r\n                                            <div className=\"quantity\">\r\n                                                <button\r\n                                                    className=\"minus-btn\"\r\n                                                    type=\"button\"\r\n                                                    disabled={cartItem.qty < 2}\r\n                                                    onClick={() => subQty(index)}\r\n                                                >\r\n                                                    <i className=\"fa fa-minus\" aria-hidden=\"true\"></i>\r\n                                                </button>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={cartItem.qty}\r\n                                                    onChange={(e) => onChangeQty(e, index)}\r\n                                                />\r\n                                                <button\r\n                                                    className=\"plus-btn\"\r\n                                                    type=\"button\"\r\n                                                    disabled={cartItem.qty > cartItem.product.W_max_qtt - 1 - cartItem.product.warehouse_curr_qtt}\r\n                                                    onClick={() => addQty(index)}\r\n                                                >\r\n                                                    <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-danger m-10\"\r\n                                                onClick={() => deleteHandler(index)}\r\n                                            >\r\n                                                <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> xóa\r\n                                                        </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        <button type=\"submit\" className=\"btn btn-primary fr\">Thêm đơn nhập hàng</button>\r\n                        <button type=\"reset\" className=\"btn btn-warning fr mr-3\" onClick={() => history.goBack()}>hủy bỏ</button>\r\n                        {loadingCreate && <LoadingBox></LoadingBox>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImportAddScreen;","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\exportReducers.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ExportAddScreen.js",["446","447"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { createExport } from '../actions/exportActions';\r\nimport { listProducts } from '../actions/productAction';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Pagination from '../components/Pagination';\r\n\r\nimport { EXPORT_CREATE_RESET } from '../constants/exportConstants';\r\nimport { PRODUCT_LIST_REQUEST } from '../constants/productConstants';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction ExportAddScreen(props) {\r\n    const history = useHistory();\r\n    const [keyword, setKeyword] = useState('');\r\n    const [cart, setCart] = useState([]);\r\n    const [urgent_level, setUrgent_level] = useState('normal');\r\n    const [bonus, setBonus] = useState('');\r\n\r\n    // console.log(type);\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const { loading, error, products } = productList;\r\n    const exportCreate = useSelector((state) => state.exportCreate);\r\n    const {\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n    } = exportCreate;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts({ is_less_than_Smin: true }));\r\n        // dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (successCreate) {\r\n            dispatch({ type: EXPORT_CREATE_RESET });\r\n            props.history.push('/exports');\r\n        }\r\n        dispatch({ type: EXPORT_CREATE_RESET });\r\n    }, [successCreate, dispatch, props.history]);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [productsPerPage] = useState(5);\r\n\r\n    const indexOfLastProduct = currentPage * productsPerPage;\r\n    const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n    const currentProducts = products !== undefined ? products.slice(indexOfFirstProduct, indexOfLastProduct) : [];\r\n\r\n    const paginate = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    const onSearchHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(listProducts({ name_keyword: keyword }));\r\n        setKeyword('');\r\n        // setName(null);\r\n    };\r\n\r\n    const onSearchExpHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(listProducts({ is_almost_expired: true }));\r\n        // setName(null);\r\n    };\r\n\r\n    // const checkDisable = (product) => {\r\n    //     var index = findProductInCart([...cart], product);\r\n    //     if (product.store_curr_qtt >= product.S_max_qtt) {\r\n    //         return true;\r\n    //     }\r\n    //     if (index === 1) {\r\n    //         let newArr = [...cart];\r\n    //         if (newArr[index].qty >= newArr.product.S_max_qtt - newArr.product.store_curr_qtt) {\r\n    //             return true;\r\n    //         }\r\n    //     }\r\n    //     return false;\r\n    // };\r\n\r\n    const addToCart = (product, quantity) => {\r\n        var index = findProductInCart([...cart], product);\r\n        if (index === -1) {\r\n            console.log(\"can't find\");\r\n            let newArr = [...cart];\r\n            if (product.warehouse_curr_qtt > 0) {\r\n                newArr.push({ product, qty: quantity });\r\n            }\r\n            setCart(newArr);\r\n        }\r\n        else {\r\n            console.log(\"finded\");\r\n            let newArr = [...cart];\r\n            newArr[index].qty = ((newArr[index].qty >= product.warehouse_curr_qtt) || (newArr[index].qty >= product.S_max_qtt - product.store_curr_qtt))\r\n                ? newArr[index].qty\r\n                : newArr[index].qty + quantity;\r\n            setCart(newArr);\r\n        }\r\n    };\r\n\r\n    const findProductInCart = (fcart, fproduct) => {\r\n        var index = -1;\r\n        if (fcart.length > 0) {\r\n            for (let i = 0; i < fcart.length; i++) {\r\n                if (fcart[i].product.PID === fproduct.PID) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n\r\n    const deleteHandler = (index) => {\r\n        console.log(\"delete\");\r\n        let newArr = [...cart];\r\n        newArr.splice(index, 1);\r\n        setCart(newArr);\r\n        // console.log(newArr);\r\n    };\r\n\r\n    const onChangeQty = (event, index) => {\r\n        console.log(\"change qty\");\r\n        let newArr = [...cart];\r\n        // newArr[index].qty = parseInt(event.target.value, 10);\r\n        newArr[index].qty = event.target.value < 1 ? 1 : event.target.value > newArr[index].product.S_max_qtt - newArr[index].product.store_curr_qtt ? newArr[index].product.S_max_qtt - newArr[index].product.store_curr_qtt : parseInt(event.target.value, 10);\r\n        setCart(newArr);\r\n    };\r\n\r\n    const subQty = (index) => {\r\n        console.log(\"sub 1 qty\");\r\n        let newArr = [...cart];\r\n        newArr[index].qty -= 1;\r\n        setCart(newArr);\r\n    };\r\n\r\n    const addQty = (index) => {\r\n        console.log(\"add 1 qty\");\r\n        let newArr = [...cart];\r\n        newArr[index].qty += 1;\r\n        setCart(newArr);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let exportProducts = [];\r\n        cart.forEach(item => exportProducts.push({ productId: item.product.PID, request_total_unit: item.qty }));\r\n        dispatch(\r\n            createExport({\r\n                urgent_level,\r\n                bonus,\r\n                exportProducts,\r\n            })\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row center\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <h2>Thêm Đơn Xuất Hàng</h2>\r\n                </div>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-5 col-lg-5\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-10 col-sm-10 col-md-10 col-lg-10\">\r\n                            <form onSubmit={onSearchHandler}>\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"search-bar\"\r\n                                        value={keyword}\r\n                                        onChange={(e) => setKeyword(e.target.value)}\r\n                                    />\r\n                                    <span className=\"input-group-btn\">\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-primary\"\r\n                                        >\r\n                                            <i className=\"fa fa-search mr-3\" aria-hidden=\"true\"></i>\r\n                                    tìm kiếm\r\n                                </button>\r\n                                    </span>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-xs-1 col-sm-1 col-md-1 col-lg-1 exp\">\r\n                            <form onSubmit={onSearchExpHandler}>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-warning\"\r\n                                >\r\n                                    <i className=\"fa fa-hourglass-half\" aria-hidden=\"true\"></i>\r\n                                </button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    {loading ? (\r\n                        <LoadingBox></LoadingBox>\r\n                    ) : error ? (\r\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                    ) : (\r\n                                <>\r\n                                    {products.length === 0 && <MessageBox>No product Found</MessageBox>}\r\n                                    <table className=\"table table-bordered table-hover mt15\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"col-xs-1 col-md-1\">id</th>\r\n                                                <th className=\"col-xs-2 col-md-1\">ảnh</th>\r\n                                                <th className=\"col-xs-4 col-md-3\">tên</th>\r\n                                                <th className=\"col-xs-3 col-md-2\">cửa hàng</th>\r\n                                                <th className=\"col-xs-3 col-md-2\">tồn kho</th>\r\n                                                <th className=\"col-xs-2 col-md-1\">thêm</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {currentProducts.map((product, index) => (\r\n                                                <tr key={product.PID}>\r\n                                                    <td>\r\n                                                        <Link to={`/products/${product.PID}`}>\r\n                                                            {product.PID}\r\n                                                        </Link>\r\n                                                    </td>\r\n                                                    <td><img src={product.img_url} alt={product.name} className=\"product-img\"></img></td>\r\n                                                    <td>{product.name}</td>\r\n                                                    <td>{product.store_curr_qtt}</td>\r\n                                                    <td>{product.warehouse_curr_qtt}</td>\r\n                                                    <td>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"btn btn-primary\"\r\n                                                            disabled={product.store_curr_qtt >= product.S_max_qtt || product.warehouse_curr_qtt === 0}\r\n                                                            onClick={() => addToCart(product, 1)}\r\n                                                        >\r\n                                                            <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    {products.length > productsPerPage ? <Pagination itemsPerPage={productsPerPage} totalItems={products.length} paginate={paginate}></Pagination> : <br></br>}\r\n                                </>\r\n                            )}\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                    {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\" >độ ưu tiên:</label>\r\n                            <select\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"status\"\r\n                                value={urgent_level}\r\n                                onChange={(e) => setUrgent_level(e.target.value)}\r\n                            >\r\n                                <option value=\"normal\">bình thường</option>\r\n                                <option value=\"prior\">ưu tiên</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">ghi chú:</label>\r\n                            <textarea\r\n                                className=\"form-control\"\r\n                                rows=\"3\"\r\n                                placeholder=\"ghi chú\"\r\n                                value={bonus}\r\n                                onChange={(e) => setBonus(e.target.value)}\r\n                            >\r\n                            </textarea>\r\n                        </div>\r\n\r\n                        <table className=\"table table-hover mt15\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"col-md-1\">stt</th>\r\n                                    <th className=\"col-md-2\">tên sp</th>\r\n                                    <th className=\"col-md-2\">số lượng</th>\r\n                                    {/* <th className=\"col-md-2\">đơn giá</th>\r\n                                    <th className=\"col-md-2\">giảm giá</th>\r\n                                    <th className=\"col-md-2\">thành tiền</th> */}\r\n                                    <th className=\"col-md-1\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {cart.map((cartItem, index) => (\r\n                                    <tr key={cartItem.product.PID}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{cartItem.product.name}</td>\r\n                                        <td>\r\n                                            <div className=\"quantity\">\r\n                                                <button\r\n                                                    className=\"minus-btn\"\r\n                                                    type=\"button\"\r\n                                                    disabled={cartItem.qty < 2}\r\n                                                    onClick={() => subQty(index)}\r\n                                                >\r\n                                                    <i className=\"fa fa-minus\" aria-hidden=\"true\"></i>\r\n                                                </button>\r\n                                                <input\r\n                                                    type=\"number\"\r\n                                                    value={cartItem.qty}\r\n                                                    onChange={(e) => onChangeQty(e, index)}\r\n                                                />\r\n                                                <button\r\n                                                    className=\"plus-btn\"\r\n                                                    type=\"button\"\r\n                                                    disabled={cartItem.qty >= cartItem.product.S_max_qtt - cartItem.product.store_curr_qtt || cartItem.qty >= cartItem.product.warehouse_curr_qtt}\r\n                                                    onClick={() => addQty(index)}\r\n                                                >\r\n                                                    <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-danger m-10\"\r\n                                                onClick={() => deleteHandler(index)}\r\n                                            >\r\n                                                <i className=\"fa fa-trash\" aria-hidden=\"true\"></i> xóa\r\n                                                        </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        <button type=\"submit\" className=\"btn btn-primary fr\">Thêm đơn xuất hàng</button>\r\n                        <button type=\"reset\" className=\"btn btn-warning fr mr-3\" onClick={() => history.goBack()}>hủy bỏ</button>\r\n                        {loadingCreate && <LoadingBox></LoadingBox>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExportAddScreen;\r\n\r\n","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ImportScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\importActions.js",["448"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ExportScreen.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ExportEditScreen.js",["449","450","451"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { detailsExport, updateExport } from '../actions/exportActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { EXPORT_DETAILS_RESET, EXPORT_UPDATE_RESET } from '../constants/exportConstants';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction ExportEditScreen(props) {\r\n    const history = useHistory();\r\n    const exportId = props.match.params.id;\r\n\r\n    const [urgent_level, setUrgent_level] = useState('');\r\n    const [export_date, setExport_date] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [bonus, setBonus] = useState('');\r\n    // const [requesterId, setRequesterId] = useState('');\r\n    // const [executorId, setExecutorId] = useState('');\r\n    // const [checkerId, setCheckerId] = useState('');\r\n    // const [supplierId, setSupplierId] = useState('');\r\n    const [exportProducts, setExportProducts] = useState([]);\r\n    const [productId, setProductId] = useState([]);\r\n    const [request_total_unit, setRequest_total_unit] = useState([]);\r\n\r\n\r\n    const exportDetails = useSelector((state) => state.exportDetails);\r\n    const { loading, error, _export } = exportDetails;\r\n\r\n    const exportUpdate = useSelector((state) => state.exportUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = exportUpdate;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    console.log(exportDetails);\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: EXPORT_UPDATE_RESET });\r\n            props.history.push('/exports');\r\n        }\r\n        if (!_export || _export.ShID !== exportId) {\r\n            dispatch({ type: EXPORT_UPDATE_RESET });\r\n            dispatch(detailsExport(exportId));\r\n        }\r\n        dispatch({ type: EXPORT_UPDATE_RESET });\r\n        // dispatch({ type: EXPORT_DETAILS_RESET });\r\n    }, [dispatch, successUpdate, props.history,]);\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            setUrgent_level(_export.urgent_level);\r\n            // if (_export.export_date) {\r\n            //     setExport_date(_export.export_date.slice(0, 10));\r\n            // }\r\n            setExport_date(_export.export_date ? _export.export_date.slice(0, 10) : '');\r\n            setState(_export.state);\r\n            // if (_export.bonus) {\r\n            //     setBonus(_export.bonus);\r\n            // }\r\n            setBonus(_export.bonus);\r\n            // setRequesterId(_export.requesterId);\r\n            // if (_export.executorId) {\r\n            //     setExecutorId(_export.executorId);\r\n            // }\r\n            // if (_export.checkerId) {\r\n            //     setCheckerId(_export.checkerId);\r\n            // }\r\n            setExportProducts(_export.products);\r\n            var arr = [];\r\n            var brr = [];\r\n            for (let i = 0; i < _export.products.length; i++) {\r\n                arr[i] = _export.products[i].PID;\r\n                brr[i] = _export.products[i].ProductInExport.request_total_unit;\r\n            }\r\n            setProductId(arr);\r\n            setRequest_total_unit(brr);\r\n        }\r\n    }, [loading,]);\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        for (let i = 0; i < exportProducts.length; i++) {\r\n            exportProducts[i] = {\r\n                productId: productId[i],\r\n                request_total_unit: request_total_unit[i],\r\n            };\r\n        }\r\n        dispatch(\r\n            updateExport({\r\n                exportId,\r\n                urgent_level,\r\n                export_date,\r\n                state,\r\n                bonus,\r\n                // requesterId,\r\n                // executorId,\r\n                // checkerId,\r\n                exportProducts,\r\n            })\r\n        );\r\n    };\r\n    const changeRequestTotalNumber = (e, index, product) => {\r\n        let arr = [...request_total_unit];\r\n        arr[index] = parseInt(e.target.value, 10);\r\n        // arr[index] = e.target.value < 1 ? 1 : e.target.value >= product.S_max_qtt - product.store_curr_qty ? product.S_max_qtt - product.store_curr_qty : e.target.value;\r\n        // console.log(product);\r\n        setRequest_total_unit(arr);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row center\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <h2>Cập Nhật Đơn Xuất Hàng</h2>\r\n                </div>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"row\">\r\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                    {loading ? (\r\n                        <LoadingBox></LoadingBox>\r\n                    ) : error ? (\r\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                    ) : (\r\n                                <>\r\n                                    <form onSubmit={submitHandler}>\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                                                <>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-label\" >độ ưu tiên:</label>\r\n                                                        <select\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            name=\"status\"\r\n                                                            value={urgent_level}\r\n                                                            onChange={(e) => setUrgent_level(e.target.value)}\r\n                                                        >\r\n                                                            <option value=\"normal\">bình thường</option>\r\n                                                            <option value=\"prior\">ưu tiên</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    {state !== \"request\"\r\n                                                        ? (<div className=\"form-group\">\r\n                                                            <label className=\"form-label\">ngày xuất hàng:</label>\r\n                                                            <input\r\n                                                                type=\"date\"\r\n                                                                className=\"form-control\"\r\n                                                                placeholder=\"ngày nhập hàng\"\r\n                                                                name=\"export_date\"\r\n                                                                value={export_date}\r\n                                                                onChange={(e) => setExport_date(e.target.value)}\r\n                                                            />\r\n                                                        </div>)\r\n                                                        : \"\"\r\n                                                    }\r\n                                                    {_export.state === \"request\"\r\n                                                        ? (\r\n                                                            <div className=\"form-group\">\r\n                                                                <label className=\"form-label\" >tình trạng:</label>\r\n                                                                <select\r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"state\"\r\n                                                                    value={state}\r\n                                                                    onChange={(e) => setState(e.target.value)}\r\n                                                                >\r\n                                                                    <option value=\"request\">yêu cầu</option>\r\n                                                                    <option value=\"executed\">đã thực hiện</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        )\r\n                                                        : (\r\n                                                            <div className=\"form-group\">\r\n                                                                <label className=\"form-label\" >tình trạng:</label>\r\n                                                                <select\r\n                                                                    type=\"text\"\r\n                                                                    className=\"form-control\"\r\n                                                                    name=\"state\"\r\n                                                                    value={state}\r\n                                                                    onChange={(e) => setState(e.target.value)}\r\n                                                                >\r\n                                                                    <option value=\"request\">yêu cầu</option>\r\n                                                                    <option value=\"executed\">đã thực hiện</option>\r\n                                                                    <option value=\"close\">đóng</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        )\r\n\r\n                                                    }\r\n                                                    {/* <div className=\"form-group\">\r\n                                                        <label className=\"form-label\" >tình trạng:</label>\r\n                                                        <select\r\n                                                            type=\"text\"\r\n                                                            className=\"form-control\"\r\n                                                            name=\"state\"\r\n                                                            value={state}\r\n                                                            onChange={(e) => setState(e.target.value)}\r\n                                                        >\r\n                                                            <option value=\"request\">yêu cầu</option>\r\n                                                            <option value=\"executed\">đã thực hiện</option>\r\n                                                            <option value=\"close\">đóng</option>\r\n                                                        </select>\r\n                                                    </div> */}\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-label\">ghi chú:</label>\r\n                                                        <textarea\r\n                                                            className=\"form-control\"\r\n                                                            rows=\"3\"\r\n                                                            placeholder=\"ghi chú\"\r\n                                                            value={bonus}\r\n                                                            onChange={(e) => setBonus(e.target.value)}\r\n                                                        >\r\n                                                        </textarea>\r\n                                                    </div>\r\n                                                    {/* <div className=\"form-group\">\r\n                                                        <label className=\"form-label\">NV yêu cầu:</label>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"nhân viên yêu cầu\"\r\n                                                            name=\"requesterId\"\r\n                                                            value={requesterId}\r\n                                                            onChange={(e) => setRequesterId(e.target.value)}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-label\">NV thực hiện:</label>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"nhân viên thực hiện\"\r\n                                                            name=\"executorId\"\r\n                                                            value={executorId}\r\n                                                            onChange={(e) => setExecutorId(e.target.value)}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label className=\"form-label\">NV kiểm tra:</label>\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"nhân viên kiểm tra\"\r\n                                                            name=\"checkerId\"\r\n                                                            value={checkerId}\r\n                                                            onChange={(e) => setCheckerId(e.target.value)}\r\n                                                        />\r\n                                                    </div> */}\r\n                                                </>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-xs-12 col-sm-12 col-md-5 col-lg-5\">\r\n                                                <>\r\n\r\n                                                    <table className=\"table table-hover mt15\">\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th className=\"col-md-1\">mã số SP</th>\r\n                                                                <th className=\"col-md-1\">số lượng</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            {exportProducts.map((product, index) => (\r\n                                                                <tr key={product.PID}>\r\n                                                                    {/* <td>{index + 1}</td> */}\r\n                                                                    <td>\r\n                                                                        <Link to={`/products/${productId[index]}`}>\r\n                                                                            {productId[index]}\r\n                                                                        </Link>\r\n                                                                    </td>\r\n                                                                    <td>\r\n                                                                        <div className=\"form-group\">\r\n                                                                            <input\r\n                                                                                type=\"number\"\r\n                                                                                className=\"form-control\"\r\n                                                                                value={request_total_unit[index]}\r\n                                                                                onChange={(e) => changeRequestTotalNumber(e, index, product)}\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            ))}\r\n                                                        </tbody>\r\n                                                    </table>\r\n\r\n\r\n\r\n                                                </>\r\n                                            </div>\r\n                                        </div>\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-primary fr\"\r\n                                            disabled={_export.state === 'close'}\r\n                                        >\r\n                                            cập nhật đơn xuất hàng\r\n                                        </button>\r\n                                        <button type=\"reset\" className=\"btn btn-warning fr mr-3\" onClick={() => history.goBack()}>hủy bỏ</button>\r\n                                        {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                                    </form>\r\n                                </>\r\n                            )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExportEditScreen;","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\actions\\exportActions.js",["452"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\ImportEditScreen.js",["453","454","455"],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\reducers\\importReducers.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\importConstants.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\constants\\exportConstants.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\InvoiceDetailScreen.js",["456","457"],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { detailsInvoice } from '../actions/invoiceActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction InvoiceDetailScreen(props) {\r\n    // const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const invoiceId = props.match.params.id;\r\n\r\n    const invoiceDetails = useSelector((state) => state.invoiceDetails);\r\n    const { loading, error, invoice } = invoiceDetails;\r\n    useEffect(() => {\r\n        dispatch(detailsInvoice(invoiceId))\r\n    },\r\n        [dispatch, invoiceId]\r\n    );\r\n    // console.log(invoice);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid\">\r\n            {loading ? (\r\n                <LoadingBox></LoadingBox>\r\n            ) : error ? (\r\n                <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            ) : (\r\n                        <>\r\n                            <div className=\"row center\">\r\n                                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                                    <h2>Đơn hàng - {invoice.BID}</h2>\r\n                                </div>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                onClick={() => props.history.goBack()}\r\n                            >\r\n                                Quay lại\r\n                            </button>\r\n\r\n                            <div className=\"row center\">\r\n                                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                                    <ul style={{ listStyleType: \"none\" }}>\r\n                                        <li>ngày thực hiện: {invoice.createdAt.slice(0, 10).split(\"-\").reverse().join(\"-\")}</li>\r\n                                        {/* <li>{invoice.createdAt}</li> */}\r\n                                        <li>tên khách hàng: {invoice.cus_name}</li>\r\n                                        <li>nhân viên: {invoice.manager.LName + \" \" + invoice.manager.FName + \" - \" + invoice.MngID}</li>\r\n                                        <li>giá trị đơn hàng: {invoice.total}</li>\r\n                                    </ul>\r\n                                </div>\r\n                                <hr />\r\n                                {/* <div className=\"col-xs-12 col-sm-12 col-md-2 col-lg-2\">\r\n                                </div> */}\r\n                                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                                    <table className=\"table table-bordered table-hover\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"col-xs-1 col-sm-1 col-md-1 col-lg-1 center\">stt</th>\r\n                                                <th className=\"col-xs-1 col-sm-1 col-md-1 col-lg-1 center\">id sản phẩm</th>\r\n                                                <th className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2 center\">hình ảnh </th>\r\n                                                <th className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2 center\">tên sản phẩm </th>\r\n                                                <th className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2 center\">số lượng</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {invoice.products.map((product, index) => (\r\n                                                <tr key={product.BID}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                        <Link to={`/products/${product.PID}`}>\r\n                                                            {product.PID}\r\n                                                        </Link>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <Link to={`/products/${product.PID}`}>\r\n                                                            <img src={product.img_url} alt={product.name} className=\"product-img\"></img>\r\n                                                        </Link>\r\n                                                    </td>\r\n                                                    <td>{product.name}</td>\r\n                                                    <td>{product.ProductOnBill.quantity}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InvoiceDetailScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\UserDetailScreen.js",["458","459"],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { detailsUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction UserDetailScreen(props) {\r\n    // const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const userId = props.match.params.id;\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n    useEffect(() => {\r\n        dispatch(detailsUser(userId))\r\n    },\r\n        [dispatch, userId]\r\n    );\r\n    // console.log(user);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid\">\r\n            {loading ? (\r\n                <LoadingBox></LoadingBox>\r\n            ) : error ? (\r\n                <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            ) : (\r\n                        <>\r\n                            <div className=\"row center\">\r\n                                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                                    <h2>thông tin người dùng</h2>\r\n                                </div>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                onClick={() => props.history.goBack()}\r\n                            >\r\n                                Quay lại\r\n                            </button>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xs-0 col-sm-0 col-md-3 col-lg-3\">\r\n                                </div>\r\n                                <div className=\"col-xs-12 col-sm-12 col-md-6 col-lg-6\">\r\n                                    <ul className=\"list-no-style lh-2\">\r\n                                        <li className=\"avatar-large center\">\r\n                                            {(user.avt_url !== null) ? <img src={user.avt_url} alt={user.FName} /> : <img src=\"./images/user1.png\" alt=\"asfas\" />}\r\n                                        </li>\r\n                                        {/* <li>tên: {user.LName + \" \" + user.FName}</li>\r\n                                        <li>accountName: {user.accountName}</li>\r\n                                        <li>địa chỉ: {user.Address}</li>\r\n                                        <li>email: {user.email}</li>\r\n                                        <li>số điện thoại: {user.telephoneNumber}</li>\r\n                                        <li>loại người dùng: {user.managerType}</li>\r\n                                        <li>ngày bắt đầu làm việc: {(user.date_start_working).split(\"-\").reverse().join(\"-\")}</li> */}\r\n                                    </ul>\r\n                                    <div className=\"table-responsive\">\r\n                                        <table className=\"table table-bordered table-hover\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"col-md-3\">họ và tên:</td>\r\n                                                    <td className=\"col-md-8\">{user.LName + \" \" + user.FName}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>mã số:</td>\r\n                                                    <td>{user.MngID}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>tên tài khoản:</td>\r\n                                                    <td>{user.accountName}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>địa chỉ:</td>\r\n                                                    <td>{user.Address}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>ngày sinh:</td>\r\n                                                    <td>{user.BDay}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>email:</td>\r\n                                                    <td>{user.email}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>số điện thoại:</td>\r\n                                                    <td>{user.telephoneNumber}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>giới tính:</td>\r\n                                                    <td>{user.gender === \"male\" ? \"nam\" : user.gender === \"female\" ? \"nữ\" : \"khác\"}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>ngày bắt đầu làm việc:</td>\r\n                                                    <td>{user.date_start_working.split(\"-\").reverse().join(\"-\")}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>loại người dùng:</td>\r\n                                                    <td>{user.managerType === \"prime\" ? \"nâng cao\" : \"bình thường\"}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>lương:</td>\r\n                                                    <td>{user.salary}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>trạng thái:</td>\r\n                                                    <td>{user.is_active ? \"đang kích hoạt\" : \"vô hiệu hóa\"}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserDetailScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\FormatCurrency.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\components\\BarChart.js",[],"C:\\Users\\xnguy\\OneDrive\\Desktop\\mine_pressure\\my_doom\\src\\screens\\StatisticScreen.js",[],{"ruleId":"460","replacedBy":"461"},{"ruleId":"462","replacedBy":"463"},{"ruleId":"464","severity":1,"message":"465","line":1,"column":10,"nodeType":"466","messageId":"467","endLine":1,"endColumn":19},{"ruleId":"464","severity":1,"message":"468","line":2,"column":10,"nodeType":"466","messageId":"467","endLine":2,"endColumn":21},{"ruleId":"464","severity":1,"message":"469","line":3,"column":25,"nodeType":"466","messageId":"467","endLine":3,"endColumn":29},{"ruleId":"464","severity":1,"message":"470","line":3,"column":31,"nodeType":"466","messageId":"467","endLine":3,"endColumn":36},{"ruleId":"464","severity":1,"message":"471","line":8,"column":8,"nodeType":"466","messageId":"467","endLine":8,"endColumn":25},{"ruleId":"464","severity":1,"message":"472","line":9,"column":8,"nodeType":"466","messageId":"467","endLine":9,"endColumn":22},{"ruleId":"464","severity":1,"message":"473","line":10,"column":8,"nodeType":"466","messageId":"467","endLine":10,"endColumn":30},{"ruleId":"464","severity":1,"message":"474","line":11,"column":8,"nodeType":"466","messageId":"467","endLine":11,"endColumn":27},{"ruleId":"464","severity":1,"message":"475","line":12,"column":8,"nodeType":"466","messageId":"467","endLine":12,"endColumn":21},{"ruleId":"464","severity":1,"message":"476","line":13,"column":8,"nodeType":"466","messageId":"467","endLine":13,"endColumn":24},{"ruleId":"464","severity":1,"message":"477","line":14,"column":8,"nodeType":"466","messageId":"467","endLine":14,"endColumn":24},{"ruleId":"464","severity":1,"message":"478","line":15,"column":8,"nodeType":"466","messageId":"467","endLine":15,"endColumn":21},{"ruleId":"464","severity":1,"message":"479","line":16,"column":8,"nodeType":"466","messageId":"467","endLine":16,"endColumn":21},{"ruleId":"464","severity":1,"message":"480","line":17,"column":8,"nodeType":"466","messageId":"467","endLine":17,"endColumn":22},{"ruleId":"464","severity":1,"message":"481","line":18,"column":8,"nodeType":"466","messageId":"467","endLine":18,"endColumn":19},{"ruleId":"464","severity":1,"message":"482","line":19,"column":8,"nodeType":"466","messageId":"467","endLine":19,"endColumn":20},{"ruleId":"464","severity":1,"message":"483","line":20,"column":8,"nodeType":"466","messageId":"467","endLine":20,"endColumn":25},{"ruleId":"464","severity":1,"message":"484","line":21,"column":8,"nodeType":"466","messageId":"467","endLine":21,"endColumn":22},{"ruleId":"460","replacedBy":"485"},{"ruleId":"462","replacedBy":"486"},{"ruleId":"460","replacedBy":"487"},{"ruleId":"462","replacedBy":"488"},{"ruleId":"489","severity":1,"message":"490","line":7,"column":17,"nodeType":"491","endLine":7,"endColumn":20},{"ruleId":"489","severity":1,"message":"490","line":8,"column":17,"nodeType":"491","endLine":8,"endColumn":20},{"ruleId":"489","severity":1,"message":"490","line":9,"column":17,"nodeType":"491","endLine":9,"endColumn":20},{"ruleId":"489","severity":1,"message":"490","line":10,"column":17,"nodeType":"491","endLine":10,"endColumn":20},{"ruleId":"492","severity":1,"message":"493","line":44,"column":8,"nodeType":"494","endLine":44,"endColumn":18,"suggestions":"495"},{"ruleId":"496","severity":1,"message":"497","line":257,"column":49,"nodeType":"498","messageId":"499","endLine":257,"endColumn":50,"suggestions":"500"},{"ruleId":"496","severity":1,"message":"501","line":257,"column":52,"nodeType":"498","messageId":"499","endLine":257,"endColumn":53,"suggestions":"502"},{"ruleId":"496","severity":1,"message":"503","line":257,"column":55,"nodeType":"498","messageId":"499","endLine":257,"endColumn":56,"suggestions":"504"},{"ruleId":"496","severity":1,"message":"505","line":257,"column":69,"nodeType":"498","messageId":"499","endLine":257,"endColumn":70,"suggestions":"506"},{"ruleId":"496","severity":1,"message":"507","line":257,"column":72,"nodeType":"498","messageId":"499","endLine":257,"endColumn":73,"suggestions":"508"},{"ruleId":"496","severity":1,"message":"509","line":257,"column":75,"nodeType":"498","messageId":"499","endLine":257,"endColumn":76,"suggestions":"510"},{"ruleId":"496","severity":1,"message":"511","line":257,"column":78,"nodeType":"498","messageId":"499","endLine":257,"endColumn":79,"suggestions":"512"},{"ruleId":"496","severity":1,"message":"513","line":257,"column":81,"nodeType":"498","messageId":"499","endLine":257,"endColumn":82,"suggestions":"514"},{"ruleId":"496","severity":1,"message":"515","line":257,"column":84,"nodeType":"498","messageId":"499","endLine":257,"endColumn":85,"suggestions":"516"},{"ruleId":"460","replacedBy":"517"},{"ruleId":"462","replacedBy":"518"},{"ruleId":"464","severity":1,"message":"519","line":15,"column":12,"nodeType":"466","messageId":"467","endLine":15,"endColumn":16},{"ruleId":"464","severity":1,"message":"520","line":15,"column":18,"nodeType":"466","messageId":"467","endLine":15,"endColumn":25},{"ruleId":"460","replacedBy":"521"},{"ruleId":"462","replacedBy":"522"},{"ruleId":"464","severity":1,"message":"523","line":170,"column":17,"nodeType":"466","messageId":"467","endLine":170,"endColumn":21},{"ruleId":"460","replacedBy":"524"},{"ruleId":"462","replacedBy":"525"},{"ruleId":"460","replacedBy":"526"},{"ruleId":"462","replacedBy":"527"},{"ruleId":"464","severity":1,"message":"523","line":104,"column":17,"nodeType":"466","messageId":"467","endLine":104,"endColumn":21},{"ruleId":"460","replacedBy":"528"},{"ruleId":"462","replacedBy":"529"},{"ruleId":"464","severity":1,"message":"523","line":95,"column":17,"nodeType":"466","messageId":"467","endLine":95,"endColumn":21},{"ruleId":"464","severity":1,"message":"523","line":95,"column":17,"nodeType":"466","messageId":"467","endLine":95,"endColumn":21},{"ruleId":"464","severity":1,"message":"523","line":95,"column":17,"nodeType":"466","messageId":"467","endLine":95,"endColumn":21},{"ruleId":"464","severity":1,"message":"523","line":95,"column":17,"nodeType":"466","messageId":"467","endLine":95,"endColumn":21},{"ruleId":"464","severity":1,"message":"523","line":95,"column":17,"nodeType":"466","messageId":"467","endLine":95,"endColumn":21},{"ruleId":"492","severity":1,"message":"530","line":46,"column":8,"nodeType":"494","endLine":46,"endColumn":49,"suggestions":"531"},{"ruleId":"492","severity":1,"message":"532","line":55,"column":8,"nodeType":"494","endLine":55,"endColumn":18,"suggestions":"533"},{"ruleId":"464","severity":1,"message":"534","line":4,"column":10,"nodeType":"466","messageId":"467","endLine":4,"endColumn":24},{"ruleId":"464","severity":1,"message":"535","line":7,"column":10,"nodeType":"466","messageId":"467","endLine":7,"endColumn":31},{"ruleId":"492","severity":1,"message":"536","line":41,"column":8,"nodeType":"494","endLine":41,"endColumn":49,"suggestions":"537"},{"ruleId":"492","severity":1,"message":"538","line":58,"column":8,"nodeType":"494","endLine":58,"endColumn":18,"suggestions":"539"},{"ruleId":"464","severity":1,"message":"540","line":4,"column":10,"nodeType":"466","messageId":"467","endLine":4,"endColumn":24},{"ruleId":"464","severity":1,"message":"541","line":5,"column":10,"nodeType":"466","messageId":"467","endLine":5,"endColumn":31},{"ruleId":"492","severity":1,"message":"542","line":45,"column":8,"nodeType":"494","endLine":45,"endColumn":49,"suggestions":"543"},{"ruleId":"492","severity":1,"message":"544","line":56,"column":8,"nodeType":"494","endLine":56,"endColumn":18,"suggestions":"545"},{"ruleId":"492","severity":1,"message":"546","line":41,"column":8,"nodeType":"494","endLine":41,"endColumn":49,"suggestions":"547"},{"ruleId":"492","severity":1,"message":"548","line":51,"column":8,"nodeType":"494","endLine":51,"endColumn":18,"suggestions":"549"},{"ruleId":"492","severity":1,"message":"550","line":45,"column":8,"nodeType":"494","endLine":45,"endColumn":49,"suggestions":"551"},{"ruleId":"492","severity":1,"message":"552","line":53,"column":8,"nodeType":"494","endLine":53,"endColumn":18,"suggestions":"553"},{"ruleId":"460","replacedBy":"554"},{"ruleId":"462","replacedBy":"555"},{"ruleId":"464","severity":1,"message":"556","line":7,"column":10,"nodeType":"466","messageId":"467","endLine":7,"endColumn":31},{"ruleId":"464","severity":1,"message":"557","line":18,"column":12,"nodeType":"466","messageId":"467","endLine":18,"endColumn":22},{"ruleId":"464","severity":1,"message":"558","line":18,"column":24,"nodeType":"466","messageId":"467","endLine":18,"endColumn":37},{"ruleId":"464","severity":1,"message":"559","line":21,"column":12,"nodeType":"466","messageId":"467","endLine":21,"endColumn":22},{"ruleId":"464","severity":1,"message":"560","line":21,"column":24,"nodeType":"466","messageId":"467","endLine":21,"endColumn":37},{"ruleId":"464","severity":1,"message":"561","line":25,"column":26,"nodeType":"466","messageId":"467","endLine":25,"endColumn":41},{"ruleId":"464","severity":1,"message":"562","line":28,"column":26,"nodeType":"466","messageId":"467","endLine":28,"endColumn":42},{"ruleId":"492","severity":1,"message":"563","line":60,"column":8,"nodeType":"494","endLine":60,"endColumn":49,"suggestions":"564"},{"ruleId":"492","severity":1,"message":"565","line":81,"column":8,"nodeType":"494","endLine":81,"endColumn":18,"suggestions":"566"},{"ruleId":"464","severity":1,"message":"567","line":2,"column":10,"nodeType":"466","messageId":"467","endLine":2,"endColumn":18},{"ruleId":"464","severity":1,"message":"568","line":4,"column":10,"nodeType":"466","messageId":"467","endLine":4,"endColumn":20},{"ruleId":"492","severity":1,"message":"569","line":43,"column":8,"nodeType":"494","endLine":43,"endColumn":49,"suggestions":"570"},{"ruleId":"492","severity":1,"message":"571","line":50,"column":8,"nodeType":"494","endLine":50,"endColumn":18,"suggestions":"572"},{"ruleId":"464","severity":1,"message":"540","line":4,"column":10,"nodeType":"466","messageId":"467","endLine":4,"endColumn":24},{"ruleId":"464","severity":1,"message":"573","line":13,"column":10,"nodeType":"466","messageId":"467","endLine":13,"endColumn":30},{"ruleId":"464","severity":1,"message":"574","line":24,"column":11,"nodeType":"466","messageId":"467","endLine":24,"endColumn":25},{"ruleId":"492","severity":1,"message":"575","line":45,"column":8,"nodeType":"494","endLine":45,"endColumn":10,"suggestions":"576"},{"ruleId":"464","severity":1,"message":"573","line":13,"column":10,"nodeType":"466","messageId":"467","endLine":13,"endColumn":30},{"ruleId":"492","severity":1,"message":"575","line":39,"column":8,"nodeType":"494","endLine":39,"endColumn":10,"suggestions":"577"},{"ruleId":"464","severity":1,"message":"523","line":96,"column":17,"nodeType":"466","messageId":"467","endLine":96,"endColumn":21},{"ruleId":"464","severity":1,"message":"578","line":9,"column":10,"nodeType":"466","messageId":"467","endLine":9,"endColumn":30},{"ruleId":"492","severity":1,"message":"579","line":55,"column":8,"nodeType":"494","endLine":55,"endColumn":49,"suggestions":"580"},{"ruleId":"492","severity":1,"message":"581","line":86,"column":8,"nodeType":"494","endLine":86,"endColumn":18,"suggestions":"582"},{"ruleId":"464","severity":1,"message":"523","line":95,"column":17,"nodeType":"466","messageId":"467","endLine":95,"endColumn":21},{"ruleId":"464","severity":1,"message":"583","line":10,"column":10,"nodeType":"466","messageId":"467","endLine":10,"endColumn":30},{"ruleId":"492","severity":1,"message":"584","line":65,"column":8,"nodeType":"494","endLine":65,"endColumn":49,"suggestions":"585"},{"ruleId":"492","severity":1,"message":"586","line":109,"column":8,"nodeType":"494","endLine":109,"endColumn":18,"suggestions":"587"},{"ruleId":"464","severity":1,"message":"567","line":2,"column":10,"nodeType":"466","messageId":"467","endLine":2,"endColumn":18},{"ruleId":"464","severity":1,"message":"568","line":4,"column":16,"nodeType":"466","messageId":"467","endLine":4,"endColumn":26},{"ruleId":"464","severity":1,"message":"567","line":2,"column":10,"nodeType":"466","messageId":"467","endLine":2,"endColumn":18},{"ruleId":"464","severity":1,"message":"568","line":4,"column":10,"nodeType":"466","messageId":"467","endLine":4,"endColumn":20},"no-native-reassign",["588"],"no-negated-in-lhs",["589"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'CategoryAddScreen' is defined but never used.","'CategoryScreen' is defined but never used.","'DiscountLabelAddScreen' is defined but never used.","'DiscountLabelScreen' is defined but never used.","'InvoiceScreen' is defined but never used.","'ManagementScreen' is defined but never used.","'ProductAddScreen' is defined but never used.","'ProductScreen' is defined but never used.","'SellingScreen' is defined but never used.","'ShelfAddScreen' is defined but never used.","'ShelfScreen' is defined but never used.","'SignInScreen' is defined but never used.","'SupplierAddScreen' is defined but never used.","'SupplierScreen' is defined but never used.",["588"],["589"],["588"],["589"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.","ArrayExpression",["590"],"no-useless-escape","Unnecessary escape character: \\=.","Literal","unnecessaryEscape",["591","592"],"Unnecessary escape character: \\<.",["593","594"],"Unnecessary escape character: \\>.",["595","596"],"Unnecessary escape character: \\:.",["597","598"],"Unnecessary escape character: \\;.",["599","600"],"Unnecessary escape character: \\'.",["601","602"],"Unnecessary escape character: \\\".",["603","604"],"Unnecessary escape character: \\&.",["605","606"],"Unnecessary escape character: \\#.",["607","608"],["588"],["589"],"'isUp' is assigned a value but never used.","'setIsUp' is assigned a value but never used.",["588"],["589"],"'data' is assigned a value but never used.",["588"],["589"],["588"],["589"],["588"],["589"],"React Hook useEffect has missing dependencies: 'shelf' and 'shelfId'. Either include them or remove the dependency array.",["609"],"React Hook useEffect has missing dependencies: 'shelf.location', 'shelf.name', 'shelf.state', and 'shelf.type'. Either include them or remove the dependency array.",["610"],"'createCategory' is defined but never used.","'CATEGORY_CREATE_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'category' and 'categoryId'. Either include them or remove the dependency array.",["611"],"React Hook useEffect has missing dependencies: 'category.name' and 'category.shelves'. Either include them or remove the dependency array.",["612"],"'createSupplier' is defined but never used.","'SUPPLIER_CREATE_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'supplier' and 'supplierId'. Either include them or remove the dependency array.",["613"],"React Hook useEffect has missing dependencies: 'supplier.Address', 'supplier.Email', 'supplier.Tax_ID', 'supplier.name', and 'supplier.telephoneNumber'. Either include them or remove the dependency array.",["614"],"React Hook useEffect has missing dependencies: 'discount' and 'discountId'. Either include them or remove the dependency array.",["615"],"React Hook useEffect has missing dependencies: 'discount.description', 'discount.end_date', 'discount.rate', 'discount.start_date', and 'discount.title'. Either include them or remove the dependency array.",["616"],"React Hook useEffect has missing dependencies: 'invoice' and 'invoiceId'. Either include them or remove the dependency array.",["617"],"React Hook useEffect has missing dependencies: 'invoice.cus_name' and 'invoice.total'. Either include them or remove the dependency array.",["618"],["588"],["589"],"'PRODUCT_DETAILS_RESET' is defined but never used.","'W_curr_qtt' is assigned a value but never used.","'setW_curr_qtt' is assigned a value but never used.","'S_curr_qtt' is assigned a value but never used.","'setS_curr_qtt' is assigned a value but never used.","'setImport_price' is assigned a value but never used.","'setqQtt_per_unit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'product' and 'productId'. Either include them or remove the dependency array.",["619"],"React Hook useEffect has missing dependencies: 'barcode', 'discountId', 'product.S_max_qtt', 'product.S_min_qtt', 'product.W_max_qtt', 'product.W_min_qtt', 'product.barcode', 'product.brand', 'product.categoryId', 'product.description', 'product.discountId', 'product.name', 'product.notice_days', 'product.otherDetail', 'product.sell_price', and 'product.vat'. Either include them or remove the dependency array. You can also do a functional update 'setBarcode(b => ...)' if you only need 'barcode' in the 'setBarcode' call.",["620"],"'useState' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'user' and 'userId'. Either include them or remove the dependency array.",["621"],"React Hook useEffect has missing dependencies: 'user.gender' and 'user.is_active'. Either include them or remove the dependency array.",["622"],"'PRODUCT_LIST_REQUEST' is defined but never used.","'getCurrentDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["623"],["624"],"'EXPORT_DETAILS_RESET' is defined but never used.","React Hook useEffect has missing dependencies: '_export' and 'exportId'. Either include them or remove the dependency array.",["625"],"React Hook useEffect has missing dependencies: '_export.bonus', '_export.export_date', '_export.products', '_export.state', and '_export.urgent_level'. Either include them or remove the dependency array.",["626"],"'IMPORT_DETAILS_RESET' is defined but never used.","React Hook useEffect has missing dependencies: '_import' and 'importId'. Either include them or remove the dependency array.",["627"],"React Hook useEffect has missing dependencies: '_import.bonus', '_import.import_date', '_import.products', '_import.state', '_import.supplierId', and '_import.urgent_level'. Either include them or remove the dependency array.",["628"],"no-global-assign","no-unsafe-negation",{"desc":"629","fix":"630"},{"messageId":"631","fix":"632","desc":"633"},{"messageId":"634","fix":"635","desc":"636"},{"messageId":"631","fix":"637","desc":"633"},{"messageId":"634","fix":"638","desc":"636"},{"messageId":"631","fix":"639","desc":"633"},{"messageId":"634","fix":"640","desc":"636"},{"messageId":"631","fix":"641","desc":"633"},{"messageId":"634","fix":"642","desc":"636"},{"messageId":"631","fix":"643","desc":"633"},{"messageId":"634","fix":"644","desc":"636"},{"messageId":"631","fix":"645","desc":"633"},{"messageId":"634","fix":"646","desc":"636"},{"messageId":"631","fix":"647","desc":"633"},{"messageId":"634","fix":"648","desc":"636"},{"messageId":"631","fix":"649","desc":"633"},{"messageId":"634","fix":"650","desc":"636"},{"messageId":"631","fix":"651","desc":"633"},{"messageId":"634","fix":"652","desc":"636"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"681","fix":"683"},{"desc":"684","fix":"685"},{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"desc":"690","fix":"691"},"Update the dependencies array to be: [loading, products]",{"range":"692","text":"693"},"removeEscape",{"range":"694","text":"695"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"696","text":"697"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"698","text":"695"},{"range":"699","text":"697"},{"range":"700","text":"695"},{"range":"701","text":"697"},{"range":"702","text":"695"},{"range":"703","text":"697"},{"range":"704","text":"695"},{"range":"705","text":"697"},{"range":"706","text":"695"},{"range":"707","text":"697"},{"range":"708","text":"695"},{"range":"709","text":"697"},{"range":"710","text":"695"},{"range":"711","text":"697"},{"range":"712","text":"695"},{"range":"713","text":"697"},"Update the dependencies array to be: [dispatch, successUpdate, props.history, shelf, shelfId]",{"range":"714","text":"715"},"Update the dependencies array to be: [loading, shelf.location, shelf.name, shelf.state, shelf.type]",{"range":"716","text":"717"},"Update the dependencies array to be: [dispatch, successUpdate, props.history, category, categoryId]",{"range":"718","text":"719"},"Update the dependencies array to be: [category.name, category.shelves, loading]",{"range":"720","text":"721"},"Update the dependencies array to be: [dispatch, successUpdate, props.history, supplier, supplierId]",{"range":"722","text":"723"},"Update the dependencies array to be: [loading, supplier.Address, supplier.Email, supplier.Tax_ID, supplier.name, supplier.telephoneNumber]",{"range":"724","text":"725"},"Update the dependencies array to be: [dispatch, successUpdate, props.history, discount, discountId]",{"range":"726","text":"727"},"Update the dependencies array to be: [discount.description, discount.end_date, discount.rate, discount.start_date, discount.title, loading]",{"range":"728","text":"729"},"Update the dependencies array to be: [dispatch, successUpdate, props.history, invoice, invoiceId]",{"range":"730","text":"731"},"Update the dependencies array to be: [invoice.cus_name, invoice.total, loading]",{"range":"732","text":"733"},"Update the dependencies array to be: [dispatch, successUpdate, props.history, product, productId]",{"range":"734","text":"735"},"Update the dependencies array to be: [barcode, discountId, loading, product.S_max_qtt, product.S_min_qtt, product.W_max_qtt, product.W_min_qtt, product.barcode, product.brand, product.categoryId, product.description, product.discountId, product.name, product.notice_days, product.otherDetail, product.sell_price, product.vat]",{"range":"736","text":"737"},"Update the dependencies array to be: [dispatch, successUpdate, props.history, user, userId]",{"range":"738","text":"739"},"Update the dependencies array to be: [loading, user.gender, user.is_active]",{"range":"740","text":"741"},"Update the dependencies array to be: [dispatch]",{"range":"742","text":"743"},{"range":"744","text":"743"},"Update the dependencies array to be: [dispatch, successUpdate, props.history, _export, exportId]",{"range":"745","text":"746"},"Update the dependencies array to be: [_export.bonus, _export.export_date, _export.products, _export.state, _export.urgent_level, loading]",{"range":"747","text":"748"},"Update the dependencies array to be: [dispatch, successUpdate, props.history, _import, importId]",{"range":"749","text":"750"},"Update the dependencies array to be: [_import.bonus, _import.import_date, _import.products, _import.state, _import.supplierId, _import.urgent_level, loading]",{"range":"751","text":"752"},[1517,1527],"[loading, products]",[13189,13190],"",[13189,13189],"\\",[13192,13193],[13192,13192],[13195,13196],[13195,13195],[13209,13210],[13209,13209],[13212,13213],[13212,13212],[13215,13216],[13215,13215],[13218,13219],[13218,13218],[13221,13222],[13221,13221],[13224,13225],[13224,13224],[1564,1605],"[dispatch, successUpdate, props.history, shelf, shelfId]",[1824,1834],"[loading, shelf.location, shelf.name, shelf.state, shelf.type]",[1550,1591],"[dispatch, successUpdate, props.history, category, categoryId]",[2137,2147],"[category.name, category.shelves, loading]",[1691,1732],"[dispatch, successUpdate, props.history, supplier, supplierId]",[2025,2035],"[loading, supplier.Address, supplier.Email, supplier.Tax_ID, supplier.name, supplier.telephoneNumber]",[1593,1634],"[dispatch, successUpdate, props.history, discount, discountId]",[1927,1937],"[discount.description, discount.end_date, discount.rate, discount.start_date, discount.title, loading]",[1568,1609],"[dispatch, successUpdate, props.history, invoice, invoiceId]",[1803,1813],"[invoice.cus_name, invoice.total, loading]",[2421,2462],"[dispatch, successUpdate, props.history, product, productId]",[3446,3456],"[barcode, discountId, loading, product.S_max_qtt, product.S_min_qtt, product.W_max_qtt, product.W_min_qtt, product.barcode, product.brand, product.categoryId, product.description, product.discountId, product.name, product.notice_days, product.otherDetail, product.sell_price, product.vat]",[1458,1499],"[dispatch, successUpdate, props.history, user, userId]",[1651,1661],"[loading, user.gender, user.is_active]",[1593,1595],"[dispatch]",[1482,1484],[2119,2160],"[dispatch, successUpdate, props.history, _export, exportId]",[3351,3361],"[_export.bonus, _export.export_date, _export.products, _export.state, _export.urgent_level, loading]",[2673,2714],"[dispatch, successUpdate, props.history, _import, importId]",[4786,4796],"[_import.bonus, _import.import_date, _import.products, _import.state, _import.supplierId, _import.urgent_level, loading]"]